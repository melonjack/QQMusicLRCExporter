//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "CloudProtocolsManagerDelegate.h"
#import "ProtocolHostDelegate.h"

@class InputFolderName, NSString;

__attribute__((visibility("hidden")))
@interface CloudFolderEdit : NSObject <ProtocolHostDelegate, CloudProtocolsManagerDelegate>
{
    unsigned long _uin;
    InputFolderName *_inputFolderName;
    BOOL _isPiLiangDelSongs;
    int _lastAddToLoveType;
    NSString *_lastAddToLoveName;
    long long _lastAddToItemId;
}

@property long long lastAddToItemId; // @synthesize lastAddToItemId=_lastAddToItemId;
@property(retain) NSString *lastAddToLoveName; // @synthesize lastAddToLoveName=_lastAddToLoveName;
@property int lastAddToLoveType; // @synthesize lastAddToLoveType=_lastAddToLoveType;
@property(nonatomic) BOOL isPiLiangDelSongs; // @synthesize isPiLiangDelSongs=_isPiLiangDelSongs;
@property(retain) InputFolderName *inputFolderName; // @synthesize inputFolderName=_inputFolderName;
- (void).cxx_destruct;
- (int)lastAddToLoveType:(id *)arg1 itemId:(long long *)arg2;
- (void)setLastAddToLoveType:(int)arg1 name:(id)arg2 itemId:(long long)arg3;
- (id)lastAddToLoveMessage:(float)arg1 font:(id)arg2;
- (void)syncUp;
- (void)hostCallBackWithWorkProtocol:(id)arg1 Result:(int)arg2;
- (BOOL)setIcoImage:(id)arg1 toFolderInfo:(id)arg2 err:(id *)arg3;
- (BOOL)setIcoPath:(id)arg1 toFolderInfo:(id)arg2;
- (void)removePendingUploadFolderIcoPath:(id)arg1;
- (id)folderOriginalURL:(id)arg1;
- (void)_notifyCollectEditUIById:(int)arg1 collectInfo:(id)arg2;
- (void)_addStatOfCollect:(id)arg1;
- (void)_autoOpenLoveSwitch:(id)arg1;
- (void)tryFirstTimeUpdate;
- (void)saveFolderSongs:(id)arg1 ByFolder:(id)arg2;
- (unsigned long)getNextFavoriteFolderCreateTime;
- (int)getNextLocalFolderId;
- (void)forceRefresh;
- (void)onSyncFolderAddFinish:(id)arg1 serverFolder:(id)arg2;
- (BOOL)orderHasSynToServer;
- (void)onSyncFolderOrder:(id)arg1;
- (void)syncFolderOrderFinish:(id)arg1;
- (id)extraFolderArray:(id)arg1;
- (BOOL)onlyHasMyFolder:(id)arg1;
- (void)onSyncFolderOrderFinish;
- (void)onSyncFolderDeleteFinish:(int)arg1;
- (void)onSyncFolderRenameFinish:(id)arg1;
- (void)saveRenamedFolderName:(id)arg1;
- (void)saveFolderOrderToDB;
- (void)onSyncFolderSongsFailed:(id)arg1 folderSongs:(id)arg2 opType:(int)arg3;
- (void)onSyncFolderSongsFinish:(id)arg1 folderSongs:(id)arg2 opType:(int)arg3;
- (void)onActionWillStart:(id)arg1;
- (void)onActionWillDone:(id)arg1;
- (void)onSessionAllDone:(id)arg1;
- (void)onSessionItemDone:(id)arg1;
- (void)insertUserFolderToFront:(id)arg1;
- (void)_autoDownloadByCompareResult:(id)arg1 newFolderSongs:(id)arg2;
- (void)_autoDownloadSongs:(id)arg1;
- (void)saveTaoSongWithFolder:(id)arg1 Result:(id)arg2;
- (void)handleAsynToCloud:(id)arg1 action:(id)arg2 protocol:(id)arg3 workResult:(int)arg4;
- (void)handleResponseUpdateTaoSong:(id)arg1 action:(id)arg2 protocol:(id)arg3 workResult:(int)arg4;
- (id)findSameFolder:(id)arg1 fromArray:(id)arg2;
- (void)saveSubFolderResult:(id)arg1 fromNowArray:(id)arg2 needUpdate:(id)arg3;
- (void)handleResponseUpdateTao:(id)arg1 action:(id)arg2 protocol:(id)arg3 workResult:(int)arg4;
- (void)handleResponseUpdateFolder:(id)arg1 action:(id)arg2 protocol:(id)arg3 workResult:(int)arg4;
- (void)handleResponseUpdateFolderSong:(id)arg1 action:(id)arg2 protocol:(id)arg3 workResult:(int)arg4;
- (BOOL)saveFolderResult:(id)arg1 calledByPersistentConnection:(BOOL)arg2 userInfo:(id)arg3;
- (unsigned int)_getFirstNotSystemFolder:(id)arg1;
- (void)updateAllFolder:(id)arg1;
- (void)delayFakeUpdateFolder;
- (void)onPersistConnectionCommandReceived:(id)arg1;
- (int)_convertPersistIdToFolderOp:(int)arg1;
- (id)filterGososoAndiPodSongs:(id)arg1;
- (void)applyFolderSongEditResultByDeletedSongInfos:(id)arg1 existedSolderInfos:(id)arg2 toFolderInfo:(id)arg3 songsOrderChanged:(BOOL)arg4;
- (void)applyTaoFolderEditResultByDeletedFolderInfos:(id)arg1;
- (void)applyTaoFolderEditResultByDeletedFolderInfos:(id)arg1 resultFolders:(id)arg2 orderChanged:(BOOL)arg3;
- (void)applyFolderEditResultByDeletedFolderInfos:(id)arg1 resultFolders:(id)arg2 orderChanged:(BOOL)arg3;
- (id)_applyOrderToArray:(id)arg1 byOrderArray:(id)arg2;
- (id)getRenamedFolderArrayFromBaseArray:(id)arg1;
- (BOOL)isSame:(id)arg1 arrayBase:(id)arg2;
- (BOOL)isOrderChanged:(id)arg1 arrayBase:(id)arg2;
- (void)setAutoSave:(id)arg1 on:(BOOL)arg2 notifyServer:(BOOL)arg3;
- (void)removeSongListFromFavByBySongListItem:(id)arg1;
- (void)removeAlbumFromFavBySongListItem:(id)arg1;
- (BOOL)renameFolder:(id)arg1 toName:(id)arg2 desc:(id)arg3 tagIds:(id)arg4 tagNames:(id)arg5 error:(id *)arg6;
- (BOOL)renameFolder:(id)arg1 toName:(id)arg2 error:(id *)arg3;
- (id)createFolderInfoByFolderName:(id)arg1 folderID:(int)arg2 Tid:(long long)arg3 folderType:(int)arg4 withLimit:(BOOL)arg5;
- (id)getFiltedSongs:(id)arg1 notInFolderSongs:(id)arg2;
- (void)addSongs:(id)arg1 toFolder:(id)arg2;
- (void)addSongs:(id)arg1;
- (void)onBackgoundAddSongsToCollectFinish:(id)arg1;
- (BOOL)backgoundAddSongsToCollect:(id)arg1;
- (id)distinctSongInfo:(id)arg1;
- (BOOL)addSongsToCollect:(id)arg1;
- (void)raiseAddToCollectException:(int)arg1 folderId:(int)arg2;
- (void)deleteFolder:(id)arg1;
- (void)deleteSongsFromFolder:(id)arg1 Folder:(id)arg2 fromList:(BOOL)arg3 updateLocalAll:(BOOL)arg4 syncCall:(BOOL)arg5;
- (void)deleteSongsFromFolder:(id)arg1 Folder:(id)arg2 fromList:(BOOL)arg3 updateLocalAll:(BOOL)arg4 syncCall:(BOOL)arg5 block:(CDUnknownBlockType)arg6;
- (void)dealloc;
- (id)initWithUin:(unsigned long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

