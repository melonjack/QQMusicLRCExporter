//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "UIView.h"

#import "QMMiniPlayerSongInfoViewDelegate.h"
#import "UIScrollViewDelegate.h"

@class CAGradientLayer, NSMutableArray, NSString, QMMiniPlayerPlayButton, UIButton, UILabel, UIScrollView;

__attribute__((visibility("hidden")))
@interface QMMiniPlayerView : UIView <UIScrollViewDelegate, QMMiniPlayerSongInfoViewDelegate>
{
    double animationPauseTime;
    BOOL isPlayedRadio;
    BOOL isPauseAlbumAnimation;
    BOOL _isAutoPlayNext;
    BOOL _isBlackModel;
    BOOL _isNotFirstStartAnimation;
    UIScrollView *_songInfoBaseScrollView;
    NSMutableArray *_songInfoViewArray;
    QMMiniPlayerPlayButton *_playSongButton;
    UIButton *_songListButton;
    id <QMMiniPlayerViewDelegate> _playingDelegate;
    CAGradientLayer *_gradientLayer;
    UIView *_baseView;
    UIView *_emptyBaseView;
    UIView *_maskView;
    UILabel *_emptyTextLabel;
    UIButton *_emptyPlayButton;
    UIButton *_emptyListButton;
    struct CGPoint _startPoint;
}

@property(nonatomic) BOOL isNotFirstStartAnimation; // @synthesize isNotFirstStartAnimation=_isNotFirstStartAnimation;
@property(nonatomic) BOOL isBlackModel; // @synthesize isBlackModel=_isBlackModel;
@property(retain, nonatomic) UIButton *emptyListButton; // @synthesize emptyListButton=_emptyListButton;
@property(retain, nonatomic) UIButton *emptyPlayButton; // @synthesize emptyPlayButton=_emptyPlayButton;
@property(retain, nonatomic) UILabel *emptyTextLabel; // @synthesize emptyTextLabel=_emptyTextLabel;
@property(retain, nonatomic) UIView *maskView; // @synthesize maskView=_maskView;
@property(retain, nonatomic) UIView *emptyBaseView; // @synthesize emptyBaseView=_emptyBaseView;
@property(retain, nonatomic) UIView *baseView; // @synthesize baseView=_baseView;
@property(nonatomic) BOOL isAutoPlayNext; // @synthesize isAutoPlayNext=_isAutoPlayNext;
@property(retain, nonatomic) CAGradientLayer *gradientLayer; // @synthesize gradientLayer=_gradientLayer;
@property(nonatomic) struct CGPoint startPoint; // @synthesize startPoint=_startPoint;
@property(nonatomic) id <QMMiniPlayerViewDelegate> playingDelegate; // @synthesize playingDelegate=_playingDelegate;
@property(retain, nonatomic) UIButton *songListButton; // @synthesize songListButton=_songListButton;
@property(retain, nonatomic) QMMiniPlayerPlayButton *playSongButton; // @synthesize playSongButton=_playSongButton;
@property(retain, nonatomic) NSMutableArray *songInfoViewArray; // @synthesize songInfoViewArray=_songInfoViewArray;
@property(retain, nonatomic) UIScrollView *songInfoBaseScrollView; // @synthesize songInfoBaseScrollView=_songInfoBaseScrollView;
- (void).cxx_destruct;
- (void)delaySetScrollviewContentSize;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)touchEndAction;
- (id)playingSongAlbumImageView;
- (void)updateProgress:(float)arg1;
- (void)showPlayList:(id)arg1;
- (void)playPreviousSong:(id)arg1;
- (void)playNextSong:(id)arg1;
- (void)playOrPauseButtonPressed:(id)arg1;
- (void)delayResetValue;
- (void)startScrollViewAnimation;
- (void)autoPlayNextSong;
- (void)setTipsHidden;
- (void)setCurrentSingerNameIsTips:(BOOL)arg1;
- (void)setCurrentSingerName:(id)arg1 index:(int)arg2;
- (void)setCurrentSongName:(id)arg1 index:(int)arg2;
- (void)setCurrentSongImage:(id)arg1 index:(int)arg2;
- (void)changeSongListIcon:(BOOL)arg1;
- (void)layoutSonginfoView;
- (void)onColorChange;
- (void)applyGradientMaskView:(id)arg1;
- (void)buildView;
- (void)stopAlbumAnimation;
- (void)albumAnimationResume;
- (void)pauseAlbumRotation;
- (void)startAlbumRotationWithAngle:(float)arg1;
- (void)startAlbumRotation;
- (void)stopBuffingAnimation;
- (void)startBuffingAnimation;
- (id)createCustomButtonByImageName:(id)arg1 hilightedImageName:(id)arg2 selectedImageName:(id)arg3 hilightedSelectedImageName:(id)arg4 disabledImageName:(id)arg5 frame:(struct CGRect)arg6;
- (void)drawRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

