//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class CallObjectQueue, ListBase, NSMutableArray;

__attribute__((visibility("hidden")))
@interface CloudFolder : NSObject
{
    NSMutableArray *_folderInfos;
    int _eFolderStatus;
    unsigned long _uin;
    ListBase *_foldersList;
    ListBase *_folderSongsList;
    NSMutableArray *_taoFolders;
    ListBase *_taoFolderList;
    CallObjectQueue *_callObjectQueue;
    BOOL _loadFoldered;
    BOOL _needRecountOfflineCount;
}

+ (unsigned int)getIndexInArray:(id)arg1 byTid:(long long)arg2;
+ (unsigned int)getIndexInArray:(id)arg1 byFolderId:(int)arg2;
+ (unsigned int)getOfflinecountBySongs:(id)arg1;
+ (unsigned int)getOfflinecountByFolderSongs:(id)arg1 careOpType:(BOOL)arg2;
@property BOOL needRecountOfflineCount; // @synthesize needRecountOfflineCount=_needRecountOfflineCount;
@property BOOL loadFoldered; // @synthesize loadFoldered=_loadFoldered;
@property(readonly) ListBase *taoFolderList; // @synthesize taoFolderList=_taoFolderList;
@property(retain) NSMutableArray *taoFolders; // @synthesize taoFolders=_taoFolders;
@property(readonly) ListBase *folderSongsList; // @synthesize folderSongsList=_folderSongsList;
@property(retain) NSMutableArray *folderInfos; // @synthesize folderInfos=_folderInfos;
@property(readonly) int eFolderStatus; // @synthesize eFolderStatus=_eFolderStatus;
- (void).cxx_destruct;
- (void)reCountOfflineCountIfNeeded;
- (void)onNotifySongEntityFileChanged:(id)arg1;
- (id)_getFolderExistingSong:(id)arg1 folderType:(int)arg2;
- (id)getTaoFoldersExistSong:(id)arg1;
- (id)getAlbumFoldersExistSong:(id)arg1;
- (void)updateFolderInfoToDB:(id)arg1;
- (BOOL)isMyTaoSong:(id)arg1;
- (BOOL)isMyAlbumSong:(id)arg1;
- (id)foldersPassingTest:(CDUnknownBlockType)arg1;
- (id)findFolderInfoByFolderName:(id)arg1 folderID:(int)arg2 Tid:(long long)arg3 folderType:(int)arg4;
- (void)setNewFolderStatus:(int)arg1;
- (void)setNewFolderInfos:(id)arg1;
- (void)setNewTaoFolders:(id)arg1;
- (BOOL)isSongInLoveFolder:(id)arg1;
- (void)logout;
- (void)onActiveFolder:(id)arg1;
- (void)onActive;
- (BOOL)isStable;
- (BOOL)finishLoadDB;
- (void)_onReloadDataByFolderInfoFinish:(id)arg1 animateDiff:(id)arg2 updateLocalAll:(BOOL)arg3;
- (void)reloadDataByFolderInfo:(id)arg1 fromDeleteListItem:(BOOL)arg2 updateLocalAll:(BOOL)arg3 syncCall:(BOOL)arg4;
- (void)reloadDataByFolderInfo:(id)arg1 fromDeleteListItem:(BOOL)arg2 updateLocalAll:(BOOL)arg3 syncCall:(BOOL)arg4 block:(CDUnknownBlockType)arg5;
- (void)reloadData:(BOOL)arg1 updateLocalAll:(BOOL)arg2;
- (void)applyNewFolderSongData:(id)arg1 updateLocalAll:(BOOL)arg2;
- (id)getLoveFolder;
- (id)_getAnimateDiff:(id)arg1 fromDeleteListItem:(BOOL)arg2;
- (unsigned int)_getOfflinecount:(id)arg1;
- (void)dealloc;
- (id)getFolders:(int)arg1;
- (id)_getFoldersFromDB;
- (void)_avoid201NotExist;
- (BOOL)isMyPrivateList:(id)arg1;
- (BOOL)isMyFavSongList:(id)arg1;
- (BOOL)isAutoSyn:(id)arg1;
- (BOOL)isMyFavAlbmWithAlbumID:(long long)arg1;
- (BOOL)isMyFavTaoListWithDissID:(long long)arg1;
- (void)onLoginSuccess;
- (void)_loadFolders;
- (id)initWithUin:(unsigned long)arg1;

@end

