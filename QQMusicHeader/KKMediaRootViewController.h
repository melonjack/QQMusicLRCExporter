//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "TVKMediaViewController.h"

#import "KKAdsDelegate.h"
#import "KKMediaControllPlayerProtocol.h"
#import "KKMediaPlayPrepareDelegate.h"
#import "KKMediaPlayerDelegate.h"
#import "KKScreenLockDelegate.h"
#import "KKbackAdvertismentAddedProtocol.h"
#import "NetworkCheckerDelegate.h"
#import "P_QLMPlayerControlDelegate.h"
#import "QLBanabaViewControllerDataSource.h"
#import "QLInteractiveVoteOperationDelegate.h"
#import "QLPlayerCacheJusterDelegate.h"
#import "QLShareDataSource.h"
#import "UITableViewDataSource.h"
#import "UITableViewDelegate.h"

@class KKAdsFunnelReporter, KKAdsViewController, KKMediaPlayCountReporter, KKMediaPlayInfo, KKMediaPlayPreparer, KKMediaPlayer, KKMediaPlayerEventSender, KKMediaThumbImageLoader, KKPlayVaribles, KKPlayerSpeedReport, KKScreenLockView, KKVideoInfo, NSDate, NSDictionary, NSError, NSMutableDictionary, NSObject<OS_dispatch_queue>, NSString, NSTimer, QLBanabaViewController, QLFigerReportMgr, QLHotspotMovieControlView2, QLInteractiveVoteOperation, QLIpAppealingView, QLMainMovieControlView, QLMovieBaseControlView, QLMovieItem, QLPlayerCacheJuster, QLPlayerPreLoadingView, QLShareFeed, QLSimpleMovieControlView, QQMediaPlayerController, StatusReportCtl, UIButton, UIImage, UITableView, UIView, UIViewController, WaitingLoadingView, kkAdsBackAdvertismentService;

@interface KKMediaRootViewController : TVKMediaViewController <UITableViewDelegate, UITableViewDataSource, KKScreenLockDelegate, QLBanabaViewControllerDataSource, QLInteractiveVoteOperationDelegate, QLPlayerCacheJusterDelegate, P_QLMPlayerControlDelegate, KKMediaPlayPrepareDelegate, KKMediaPlayerDelegate, KKAdsDelegate, QLShareDataSource, NetworkCheckerDelegate, KKbackAdvertismentAddedProtocol, KKMediaControllPlayerProtocol>
{
    UIView *dlnaSelectorView;
    UIView *noneDLNATipView;
    UITableView *dlnaTableView;
    UIView *dlnaSearchingView;
    UIView *dlnaPlayBkgView;
    UIButton *btnDLNAReturn;
    float lastDLNAPlayTime;
    int iCurRenderIndex;
    BOOL _backPlayerWhenEnterForegroundIn3G;
    BOOL _firstPlay;
    BOOL _showInitialPlayTimeTip;
    BOOL _isPreparingVideoInfo;
    BOOL _isCachingVideoAfterAdLoadFinish;
    NSString *_lastVideoWhichHasLoadHeadAds;
    KKAdsViewController *_adsViewController;
    BOOL _advertisementProcessFinished;
    BOOL _isNeedSpeedReport;
    KKPlayerSpeedReport *_playerSpeedReport;
    KKScreenLockView *_kkScreenLockView;
    BOOL _isViewVisible;
    BOOL _shouldShowControlsWhenDidAppear;
    BOOL _userForceChangeDevice;
    QLIpAppealingView *_ipView;
    KKMediaThumbImageLoader *_thumbImageLoader;
    NSObject<OS_dispatch_queue> *_getTimeQueue;
    BOOL _needStartMediaPlayWhenAdDismiss;
    kkAdsBackAdvertismentService *_backAdsService;
    BOOL _playP2PFailed;
    struct CGRect frameSmallPlayer;
    struct CGRect frameFullPlayer;
    id <KKMediaPlayerTopViewControlProtocol> templateTopViewControlObj;
    QLMovieBaseControlView *baseControlViewBefore;
    struct CGPoint startAppRootVCPointWhenPresent;
    BOOL _togglePresentFullScreen;
    BOOL _toggleTouch;
    BOOL _toggleSwitching;
    int _lastLandscapeInterfaceOrientation;
    int _funcItemMask;
    BOOL _isInFullscreen;
    BOOL _isScreenLocked;
    BOOL _mediaRootViewControllerWasBacked;
    BOOL _shouldNotPlay;
    BOOL _canBePlayed;
    BOOL _bRenderingDLNA;
    BOOL _firstCache;
    BOOL _shouldShowHelpView;
    BOOL _hotspotCaching;
    BOOL _shouldPauseAdCached;
    BOOL _isFirstInsertHeadset;
    BOOL _isFirstPullOutHeadset;
    BOOL _needToPauseAfterReplay;
    BOOL _userChangedClarity;
    BOOL _isBackground;
    BOOL _backgroundNetworkChanged;
    BOOL _playerUIDisabled;
    BOOL _isVarietyExtra;
    BOOL _isInsertHDMI;
    BOOL _isRequestBackAdvertisement;
    BOOL _modalIsDismissing;
    BOOL _presentFromKKPresent;
    BOOL _enteredFromFullStartMoment;
    BOOL _tvStopedByAutoFinished;
    QLMainMovieControlView *_fullCtlView;
    QLSimpleMovieControlView *_smallCtlView;
    QLHotspotMovieControlView2 *_hotspotCtlView;
    id <KKMediaPlayerActionDelegate> _actionDelegate;
    int _playerMode;
    KKVideoInfo *_videoInfo;
    KKMediaPlayInfo *_mediaPlayInfo;
    KKMediaPlayer *_mediaPlayer;
    float _preloadPlaybackTime;
    int _cachingFileIndex;
    int _fileCachedNums;
    int _retryPlayerType;
    NSTimer *_hideStatusTimer;
    NSString *_loadingImgURL;
    int _interfaceType;
    float _previousBroadcastVolume;
    float _previousHeadsetVolume;
    float _currentBroadcastVolume;
    float _currentHeadsetVolume;
    QLInteractiveVoteOperation *_interactiveVoteOperation;
    NSDate *_backGroundDate;
    KKAdsFunnelReporter *_adsFunnelReporter;
    QLPlayerCacheJuster *_playerCacher;
    KKMediaPlayCountReporter *_playCountReporter;
    QLFigerReportMgr *_figerReportMgr;
    QLPlayerPreLoadingView *_preLoadingView;
    WaitingLoadingView *_loadingView;
    KKPlayVaribles *_c_playing_varibles;
    KKMediaPlayerEventSender *_playerEventSender;
    id <KKMediaPlayerControlProtocol> _superHiberarchyDelegate;
    UIView *_customSimpleUIView;
    UIView *_customMainUIView;
    QLMovieBaseControlView *_mainCtlView;
    NSString *_playerTitle;
    NSString *_playerTitleMark;
    KKMediaPlayPreparer *_mediaPreparer;
    NSString *_currentPlayID;
    NSString *_currentRequestID;
    StatusReportCtl *_reportCtl;
    UIView *_airplayView;
    NSTimer *_prgTimer;
    int _waitingNums;
    NSTimer *_slideToPlayTimer;
    NSTimer *_cachingToPlayTimer;
    NSMutableDictionary *_dicDLNARequest;
    QLBanabaViewController *_banabaViewController;
    UIViewController *_weakTagSuperHiberarchyViewController;
    double _backGroundInternal;
    struct CGRect _smallPlayerAttachFrame;
}

+ (BOOL)OpenJumpUrlWithobject;
+ (int)playSequence;
+ (id)launchFuellPlayerAndCheckPlayer:(id)arg1;
@property(nonatomic) UIViewController *weakTagSuperHiberarchyViewController; // @synthesize weakTagSuperHiberarchyViewController=_weakTagSuperHiberarchyViewController;
@property(nonatomic) BOOL tvStopedByAutoFinished; // @synthesize tvStopedByAutoFinished=_tvStopedByAutoFinished;
@property(retain, nonatomic) QLBanabaViewController *banabaViewController; // @synthesize banabaViewController=_banabaViewController;
@property(nonatomic) BOOL enteredFromFullStartMoment; // @synthesize enteredFromFullStartMoment=_enteredFromFullStartMoment;
@property(retain, nonatomic) NSMutableDictionary *dicDLNARequest; // @synthesize dicDLNARequest=_dicDLNARequest;
@property(nonatomic) BOOL presentFromKKPresent; // @synthesize presentFromKKPresent=_presentFromKKPresent;
@property(nonatomic) BOOL modalIsDismissing; // @synthesize modalIsDismissing=_modalIsDismissing;
@property(retain, nonatomic) NSTimer *cachingToPlayTimer; // @synthesize cachingToPlayTimer=_cachingToPlayTimer;
@property(retain, nonatomic) NSTimer *slideToPlayTimer; // @synthesize slideToPlayTimer=_slideToPlayTimer;
@property(nonatomic) int waitingNums; // @synthesize waitingNums=_waitingNums;
@property(retain, nonatomic) NSTimer *prgTimer; // @synthesize prgTimer=_prgTimer;
@property(retain, nonatomic) UIView *airplayView; // @synthesize airplayView=_airplayView;
@property(nonatomic) BOOL isRequestBackAdvertisement; // @synthesize isRequestBackAdvertisement=_isRequestBackAdvertisement;
@property(nonatomic) BOOL isInsertHDMI; // @synthesize isInsertHDMI=_isInsertHDMI;
@property BOOL isVarietyExtra; // @synthesize isVarietyExtra=_isVarietyExtra;
@property(retain) StatusReportCtl *reportCtl; // @synthesize reportCtl=_reportCtl;
@property(copy) NSString *currentRequestID; // @synthesize currentRequestID=_currentRequestID;
@property(copy) NSString *currentPlayID; // @synthesize currentPlayID=_currentPlayID;
@property(retain) KKMediaPlayPreparer *mediaPreparer; // @synthesize mediaPreparer=_mediaPreparer;
@property(retain) NSString *playerTitleMark; // @synthesize playerTitleMark=_playerTitleMark;
@property(retain) NSString *playerTitle; // @synthesize playerTitle=_playerTitle;
@property(nonatomic) QLMovieBaseControlView *mainCtlView; // @synthesize mainCtlView=_mainCtlView;
@property(retain, nonatomic) UIView *customMainUIView; // @synthesize customMainUIView=_customMainUIView;
@property(retain, nonatomic) UIView *customSimpleUIView; // @synthesize customSimpleUIView=_customSimpleUIView;
@property(readonly, nonatomic) BOOL playerUIDisabled; // @synthesize playerUIDisabled=_playerUIDisabled;
@property(nonatomic) id <KKMediaPlayerControlProtocol> superHiberarchyDelegate; // @synthesize superHiberarchyDelegate=_superHiberarchyDelegate;
@property(nonatomic) BOOL togglePresentFullScreen; // @synthesize togglePresentFullScreen=_togglePresentFullScreen;
@property(nonatomic) struct CGRect smallPlayerAttachFrame; // @synthesize smallPlayerAttachFrame=_smallPlayerAttachFrame;
@property(retain, nonatomic) KKMediaPlayerEventSender *playerEventSender; // @synthesize playerEventSender=_playerEventSender;
@property(retain, nonatomic) KKPlayVaribles *c_playing_varibles; // @synthesize c_playing_varibles=_c_playing_varibles;
@property(readonly, nonatomic) BOOL backgroundNetworkChanged; // @synthesize backgroundNetworkChanged=_backgroundNetworkChanged;
@property(nonatomic) BOOL isBackground; // @synthesize isBackground=_isBackground;
@property(nonatomic) BOOL userChangedClarity; // @synthesize userChangedClarity=_userChangedClarity;
@property(retain, nonatomic) WaitingLoadingView *loadingView; // @synthesize loadingView=_loadingView;
@property(retain, nonatomic) QLPlayerPreLoadingView *preLoadingView; // @synthesize preLoadingView=_preLoadingView;
@property(retain, nonatomic) QLFigerReportMgr *figerReportMgr; // @synthesize figerReportMgr=_figerReportMgr;
@property(retain, nonatomic) KKMediaPlayCountReporter *playCountReporter; // @synthesize playCountReporter=_playCountReporter;
@property(retain, nonatomic) QLPlayerCacheJuster *playerCacher; // @synthesize playerCacher=_playerCacher;
@property(retain, nonatomic) KKAdsFunnelReporter *adsFunnelReporter; // @synthesize adsFunnelReporter=_adsFunnelReporter;
@property(retain, nonatomic) NSDate *backGroundDate; // @synthesize backGroundDate=_backGroundDate;
@property(nonatomic) double backGroundInternal; // @synthesize backGroundInternal=_backGroundInternal;
@property(retain, nonatomic) QLInteractiveVoteOperation *interactiveVoteOperation; // @synthesize interactiveVoteOperation=_interactiveVoteOperation;
@property(nonatomic) BOOL needToPauseAfterReplay; // @synthesize needToPauseAfterReplay=_needToPauseAfterReplay;
@property(nonatomic) float currentHeadsetVolume; // @synthesize currentHeadsetVolume=_currentHeadsetVolume;
@property(nonatomic) float currentBroadcastVolume; // @synthesize currentBroadcastVolume=_currentBroadcastVolume;
@property(nonatomic) float previousHeadsetVolume; // @synthesize previousHeadsetVolume=_previousHeadsetVolume;
@property(nonatomic) float previousBroadcastVolume; // @synthesize previousBroadcastVolume=_previousBroadcastVolume;
@property(nonatomic) BOOL isFirstPullOutHeadset; // @synthesize isFirstPullOutHeadset=_isFirstPullOutHeadset;
@property(nonatomic) BOOL isFirstInsertHeadset; // @synthesize isFirstInsertHeadset=_isFirstInsertHeadset;
@property(retain, nonatomic) KKAdsViewController *adsViewController; // @synthesize adsViewController=_adsViewController;
@property(nonatomic) BOOL shouldPauseAdCached; // @synthesize shouldPauseAdCached=_shouldPauseAdCached;
@property(nonatomic) BOOL needStartMediaPlayWhenAdDismiss; // @synthesize needStartMediaPlayWhenAdDismiss=_needStartMediaPlayWhenAdDismiss;
@property(nonatomic) int interfaceType; // @synthesize interfaceType=_interfaceType;
@property(readonly, nonatomic) BOOL isCachingVideoAfterAdLoadFinish; // @synthesize isCachingVideoAfterAdLoadFinish=_isCachingVideoAfterAdLoadFinish;
@property(nonatomic) BOOL hotspotCaching; // @synthesize hotspotCaching=_hotspotCaching;
@property(retain) KKMediaThumbImageLoader *thumbImageLoader; // @synthesize thumbImageLoader=_thumbImageLoader;
@property(nonatomic) BOOL advertisementProcessFinished; // @synthesize advertisementProcessFinished=_advertisementProcessFinished;
@property(nonatomic) BOOL shouldShowHelpView; // @synthesize shouldShowHelpView=_shouldShowHelpView;
@property(retain, nonatomic) NSTimer *hideStatusTimer; // @synthesize hideStatusTimer=_hideStatusTimer;
@property(retain, nonatomic) NSString *lastVideoWhichHasLoadHeadAds; // @synthesize lastVideoWhichHasLoadHeadAds=_lastVideoWhichHasLoadHeadAds;
@property(nonatomic) int retryPlayerType; // @synthesize retryPlayerType=_retryPlayerType;
@property(nonatomic) int fileCachedNums; // @synthesize fileCachedNums=_fileCachedNums;
@property(nonatomic) int cachingFileIndex; // @synthesize cachingFileIndex=_cachingFileIndex;
@property(nonatomic) BOOL firstCache; // @synthesize firstCache=_firstCache;
@property BOOL bRenderingDLNA; // @synthesize bRenderingDLNA=_bRenderingDLNA;
@property BOOL canBePlayed; // @synthesize canBePlayed=_canBePlayed;
@property(nonatomic) BOOL shouldNotPlay; // @synthesize shouldNotPlay=_shouldNotPlay;
@property(nonatomic) float preloadPlaybackTime; // @synthesize preloadPlaybackTime=_preloadPlaybackTime;
@property(nonatomic) BOOL mediaRootViewControllerWasBacked; // @synthesize mediaRootViewControllerWasBacked=_mediaRootViewControllerWasBacked;
@property(retain) KKMediaPlayer *mediaPlayer; // @synthesize mediaPlayer=_mediaPlayer;
@property(retain) KKMediaPlayInfo *mediaPlayInfo; // @synthesize mediaPlayInfo=_mediaPlayInfo;
@property(retain) KKVideoInfo *videoInfo; // @synthesize videoInfo=_videoInfo;
@property id <KKMediaPlayerActionDelegate> actionDelegate; // @synthesize actionDelegate=_actionDelegate;
@property(readonly, nonatomic) BOOL isScreenLocked; // @synthesize isScreenLocked=_isScreenLocked;
@property(nonatomic) BOOL isInFullscreen; // @synthesize isInFullscreen=_isInFullscreen;
@property(retain, nonatomic) QLHotspotMovieControlView2 *hotspotCtlView; // @synthesize hotspotCtlView=_hotspotCtlView;
@property(retain, nonatomic) QLSimpleMovieControlView *smallCtlView; // @synthesize smallCtlView=_smallCtlView;
@property(retain, nonatomic) QLMainMovieControlView *fullCtlView; // @synthesize fullCtlView=_fullCtlView;
- (id)getPlayerPosterUrl;
- (void)disablePlayerControlUI;
- (void)enablePlayerControlUI;
- (void)setMediaPlayMode:(BOOL)arg1;
- (void)setMediaPlayVolume:(float)arg1;
- (void)setSeekPlayTime:(double)arg1;
- (void)startPlayNextVideo;
- (void)changeMediaFormat:(id)arg1;
- (void)showAllControlViews;
- (void)hidAllControlViews;
- (void)seekTo:(double)arg1;
- (void)continueMediaPlay:(BOOL)arg1;
- (void)pauseMediaPlayWithPauseAd;
- (void)pauseMediaPlay;
- (BOOL)JumpTVPlayerView;
- (BOOL)JumpMoviePlayerView;
- (void)setShareMomentTipsHide:(BOOL)arg1;
- (void)clearInteractiveDelegate;
- (id)remotePlayDisabledReason;
- (BOOL)isRemotePlayDisabled;
- (void)removeBackAdvertisement;
- (BOOL)isAdsViewConrollerIsPresent;
- (void)playBackAdvertisement;
- (void)loadBackAdvertisement;
- (BOOL)isPauseToPlayAdvertisement:(unsigned int)arg1;
- (void)clearBackAdsService;
- (void)createBackAdsService;
- (void)removePlayUrlExchage;
- (void)addPlayUrlExchange:(id)arg1;
- (void)removeMediaPlayerEventObserver:(id)arg1;
- (void)addMediaPlayerEventObserver:(id)arg1;
@property(readonly, nonatomic) int mediaPlayerState;
- (void)saveHdmiPlayLastTime;
- (void)updateCurrentViewController:(id)arg1;
- (void)uncomOrderStateChangeToInvalid:(id)arg1;
- (double)banabaSynchTimestampOnLive;
- (void)flashBanabaAnimate;
- (BOOL)banabaContentAllowClick;
- (void)updateBanabaButtonStatusByBanabaStatus:(BOOL)arg1 whenIsAutoPlayBanaba:(BOOL)arg2;
- (void)cleanBanabaResource;
- (BOOL)isHeadphone;
- (void)setAdMediaViewNoMuted:(BOOL)arg1;
- (float)getHardVolume;
- (void)clearPauseAdCached;
- (void)loadAdvertisementForHotspotReport;
- (void)momentDidLoginSuccess:(id)arg1;
@property(readonly, nonatomic) NSDictionary *shareReportInfo;
@property(readonly, nonatomic) QLMovieItem *shareVideoInfo;
@property(readonly, nonatomic) unsigned int sharePlatformMask;
@property(readonly, nonatomic) NSString *shareFromPage;
@property(readonly, nonatomic) unsigned int shareDataType;
@property(readonly, nonatomic) NSString *shareURL;
@property(readonly, nonatomic) UIImage *shareImage;
@property(readonly, nonatomic) NSString *shareImageURL;
@property(readonly, nonatomic) NSString *shareSubTitle;
@property(readonly, nonatomic) NSString *shareTitle;
@property(readonly, nonatomic) NSString *shareID;
- (id)pageDescription;
- (void)enableShare:(BOOL)arg1;
@property(readonly) NSString *firstURLString;
- (void)reportBeforePlayerCloseOrSwitch;
- (BOOL)playerCacheIsPlayingLive;
- (BOOL)playerCacheIsUserControlPaused;
- (int)playerCacheLoadState;
- (int)playerCachePlaybackState;
- (double)playerCacheCurrentPlaybackTime;
- (void)showHelperTips;
- (void)showBanabaHelperTipsWasOverdueOfHandle;
- (void)hideStatusBarTimer:(id)arg1;
- (void)onKKAdsShareClicked;
- (BOOL)ifAdsCanSkipForHuaNa;
- (void)jumpAdsPlayVideo;
- (void)showAdaSkipResultWithTips:(id)arg1;
- (void)showOpeningHollywoodView;
- (void)onKKAdsStateNotify:(int)arg1 adViewController:(id)arg2;
- (void)cleanAdvertisement:(BOOL)arg1;
- (void)loadPauseAdvertisement;
- (BOOL)loadAdvertisement;
- (int)getPlayAdMode;
- (BOOL)shouldLoadHeadAdvertisement;
- (BOOL)hasLoadHeadAdsThisVideo;
- (BOOL)isAdvertisementEnabled;
- (void)didAdvertisementProcessFinished;
@property(readonly, nonatomic) BOOL isPlayingAds;
- (void)onMediaDidPauseOrStop;
- (void)onMediaDidStartPlay;
- (void)newReportForVid:(id)arg1 cmd:(int)arg2;
- (void)playCtlWithVideo:(id)arg1 index:(int)arg2 lastPlay:(double)arg3 resolution:(id)arg4 vids:(id)arg5 titles:(id)arg6 infoList:(id)arg7 screenshots:(id)arg8 fullTags:(id)arg9;
- (void)screenLockViewDidHide;
- (void)delayForceChangeDeviceOrientation:(id)arg1;
- (void)screenLockStateChanged:(BOOL)arg1;
- (BOOL)isIsScreenLocked;
- (void)ToFullMediaScreen:(id)arg1;
- (void)ToSmallMediaScreen:(id)arg1;
- (void)OnInterfaceOrientationsDetect:(id)arg1;
- (void)hideScreenLock;
- (void)showScreenLock;
@property(readonly, nonatomic) BOOL isPlayerVisible;
- (void)playerControlPlayerDidSinggleTag:(id)arg1;
- (void)playerControlActionStatus:(unsigned int)arg1;
- (void)playerDidClickBackButton:(id)arg1;
- (void)playerControlDidClickPlay:(id)arg1;
- (void)playerControlDidClickShare:(id)arg1;
- (void)playerControlDidClickDownload:(id)arg1;
- (void)playerControlDidClickFavorite:(BOOL)arg1;
- (void)playerControlSeekEnd:(double)arg1;
- (void)playerControlSeekTo:(double)arg1;
- (void)playerControlSeekBegin:(double)arg1;
- (BOOL)isHDMIMode;
- (void)mediaPlayerAirplayState:(BOOL)arg1;
- (void)mediaPlayerDidExitFullscreen:(id)arg1;
- (void)mediaPlayerDidEnterFullscreen:(id)arg1;
- (void)mediaPlayerStateNotify:(id)arg1 withState:(int)arg2 withError:(id)arg3 withFileCacheOrder:(int)arg4 withIsCurrentFile:(BOOL)arg5;
- (void)mediaPlayerCheckMediaUrlError:(id)arg1 withError:(id)arg2 withFileCacheOrder:(int)arg3 withIsCurrentFile:(BOOL)arg4;
- (void)mediaPlayerRequestStateChange:(id)arg1 withError:(id)arg2 withFileCacheOrder:(int)arg3 withIsCurrentFile:(BOOL)arg4;
- (void)applyFuncItems;
- (BOOL)isFinalVarietyVideo;
- (void)startToPlayNextVideo;
- (void)mediaPlayerPlaybackDidFinish:(id)arg1;
- (void)mediaPlayerPlaybackStateDidChange:(id)arg1 withError:(id)arg2 withFileCacheOrder:(int)arg3 withIsCurrentFile:(BOOL)arg4;
- (void)mediaPlayerLoadStateDidChange:(id)arg1 withError:(id)arg2 withFileCacheOrder:(int)arg3 withIsCurrentFile:(BOOL)arg4;
- (void)mediaPlayerNaturalSizeAvailable:(id)arg1;
- (void)onClarityInfoUpdated;
- (BOOL)isNeedDetailData;
- (BOOL)isPlayHDMI;
- (BOOL)isPlayP2PFailed;
- (void)onVideoIDPrepared:(id)arg1;
- (void)onVideoDetailDataReady;
- (void)onVideoInfoUpdated:(int)arg1;
- (void)onVideoInfoPrepareFailed:(id)arg1;
- (void)onVideoInfoPrepared:(id)arg1;
- (id)playerVersion;
- (BOOL)shouldSendReport;
- (void)applicationActive;
- (void)reachabilityChanged;
- (BOOL)isCachingData;
- (BOOL)canDownloadRuning;
- (id)topViewControlObjEx;
- (id)topViewControlObj;
- (void)onNetworkChanged;
- (void)checkBackPlayerWhenEnterForegroundIn3G;
- (void)network3GPromptWithConfirmBlock:(CDUnknownBlockType)arg1 cancelBlock:(CDUnknownBlockType)arg2;
- (BOOL)checkAirPlayView;
- (BOOL)checkAHAlertView;
- (BOOL)checkExist3GPrompt:(BOOL)arg1;
- (id)getplayTimeTip;
- (id)getInitialPlayTimeTip;
- (void)showInitialPlayTimeTip;
- (void)showCachingPrompt:(BOOL)arg1 withImageIsHide:(BOOL)arg2;
- (void)setMediaplayerNoControllByMute;
- (void)RemoveAudioRouteChangeListener;
- (void)AddAudioRouteChangeListener;
- (BOOL)checkResolutionIfLoadSlowAndPrompt;
- (BOOL)checkCachingTimeWithDuration;
- (float)checkCachingTimeThanPlayingTime;
- (BOOL)checkMediaPlayerStateIsPlayed;
- (void)getVideoThumbImages:(float)arg1 count:(int)arg2 interval:(float)arg3 completedHandler:(CDUnknownBlockType)arg4;
- (id)videoClarities;
- (double)currentVideoDuration;
- (double)currentVideoPlayableDuration;
- (double)currentVideoPlayTime;
- (id)getCurrentVideoScreenShot;
- (void)openStatusBar:(id)arg1;
- (void)resetRightListView;
- (id)getPlayingSubTitle;
- (id)getPlayingTitle;
- (void)refreshListButton;
- (id)refreshMainCtlVideoTitle;
- (void)setPlayNextButtonClickEnable;
- (void)controlDownButtonAndClarityButton:(BOOL)arg1;
- (void)controlDownButtonAndMoreButtonWithTVLive;
- (void)mannlyPerformPlayAction;
- (void)performRotationAnimation:(BOOL)arg1;
- (void)toggleFullscreen:(BOOL)arg1 animated:(BOOL)arg2 toggleTouch:(BOOL)arg3;
- (void)removeCustomViewWithLayerID:(int)arg1 smallOrMainPlayer:(BOOL)arg2;
- (BOOL)addCustomView:(id)arg1 withLayerID:(int)arg2 smallOrMainPlayer:(BOOL)arg3;
- (void)setCustomMainUI:(id)arg1;
- (void)setCustomSimpleUI:(id)arg1;
- (void)updatePlayerFrame:(BOOL)arg1 needDrawUI:(BOOL)arg2;
@property(nonatomic) struct CGRect playerFrame;
@property int playerMode; // @synthesize playerMode=_playerMode;
- (BOOL)canBecomeFirstResponder;
- (void)recordPlayerSpeed:(float)arg1 withCDN:(int)arg2;
- (void)returnFromIPShowingView;
- (void)resetIPAppealing:(BOOL)arg1;
- (void)removeIPAppealing;
- (void)showIPAppealing:(id)arg1;
- (void)motionCancelled:(int)arg1 withEvent:(id)arg2;
- (void)motionEnded:(int)arg1 withEvent:(id)arg2;
- (void)onMotionTimer;
- (void)motionBegan:(int)arg1 withEvent:(id)arg2;
- (void)showErrorTip:(int)arg1 withError:(id)arg2;
@property(retain, nonatomic) NSString *loadingImgURL; // @synthesize loadingImgURL=_loadingImgURL;
- (int)currentInterfaceType;
@property(retain, nonatomic) NSString *currentVideoFormat;
@property(retain) NSError *lastPlayerError;
- (void)resetMediaAndPlayer;
- (void)adjustVideoDataType;
- (void)configVideoDataTypeWithInterfaceType:(int)arg1;
- (int)makeNextEpisodeIndex;
- (void)makeVideoFileID:(int)arg1;
- (void)makeMediaStartTimeAndEndTime:(float)arg1;
- (BOOL)isVideoDownloadedAtSubIndex:(int)arg1 subName:(id)arg2;
- (void)backPlayInitialTime;
- (void)saveRecordWithPlaybackTime:(double)arg1;
- (void)aysnSaveRecord;
- (id)getTimeQueue;
- (void)saveRecord;
- (void)closeAdvertisement;
- (void)closeMediaRootViewController;
- (void)pausePlayerIfShouldPaused;
- (void)playMediaAndModifyStatus;
- (void)bottomControlPlayStateFromBackground;
- (BOOL)isAdsVideoPaused;
- (BOOL)isAdsInCacheMode;
- (BOOL)isAdsPlaying;
- (BOOL)isAdsLoading;
- (void)controlAdsPlayOrPause:(BOOL)arg1;
- (void)controlMediaPlayStop;
- (void)controlMediaPlayOrPause:(BOOL)arg1;
- (void)slideToPlay:(float)arg1;
- (BOOL)isFuncItemEnabled:(int)arg1;
- (void)setFuncItem:(int)arg1 enable:(BOOL)arg2;
- (void)startToPlayOtherFormat:(id)arg1;
- (void)startMediaPlayToPlayAgainWithReason:(int)arg1 withError:(id)arg2;
- (BOOL)startToPlayNextEpisode:(BOOL)arg1;
- (void)playNextButtonClick;
- (void)startMediaPlayToPlayWithIndex:(int)arg1 withNeedMoveButton:(BOOL)arg2;
- (BOOL)videoIndexPayCanBePlayed:(int)arg1;
- (void)startMediaPlayToPlay;
- (void)dealPreCache;
- (BOOL)shouldLoadPreviewPoster;
@property(readonly, nonatomic) BOOL isInCacheMode;
- (void)jumpToWebPlay;
- (void)readyToPlayAds;
- (void)readyToPlayVideo;
- (void)check3GMediaPlay:(BOOL)arg1;
- (void)startPrepareMediaToPlay;
- (void)startPrepareHlsForAirplay;
- (void)startPlayMedia;
- (void)updateVideoDetailInfo:(id)arg1;
- (void)makeMediaPlayWithVideoInfo:(id)arg1 withPlayedTime:(float)arg2 withEpisodeIndex:(int)arg3 withVideoList:(id)arg4 withInterfaceTye:(int)arg5;
@property(readonly) BOOL startedPlay;
@property(readonly, retain, nonatomic) NSDate *lastAirplayTime;
@property(readonly, retain) QQMediaPlayerController *moviePlayerController;
- (void)momentPublishSucceed:(id)arg1;
- (void)hideContentController:(id)arg1;
- (void)displayContentController:(id)arg1;
- (struct CGRect)frameForContentController;
- (void)removeCustomObserver;
- (void)releaseCustomObject;
- (void)removeCustomSubViews;
- (void)removeAllRelationshipObject;
- (void)addCustomObserver;
- (void)addCustomUnlongLiveSubViews;
- (void)addCustomeSubViews;
- (void)createCustomViews;
- (void)addAllRelatioinShipObject;
- (void)checkSubViewStatus;
- (void)endChangePlayerFlush:(BOOL)arg1;
- (void)didLoadOnSmallPlayerMode;
- (void)didLoadOnFullPlayerMode;
- (void)willLoadOnSmallPlayerMode;
- (void)willLoadOnFullPlayerMode;
- (void)launchSmallPlayer;
- (void)launchFullPlayer;
- (void)calculatorPlayerZoneWhenInit;
- (void)didRotateFromInterfaceOrientation:(int)arg1;
- (void)willAnimateRotationToInterfaceOrientation:(int)arg1 duration:(double)arg2;
- (void)viewWillLayoutSubviews;
- (void)willRotateToInterfaceOrientation:(int)arg1 duration:(double)arg2;
- (unsigned int)supportedInterfaceOrientations;
- (BOOL)shouldAutorotate;
- (void)didReceiveMemoryWarning;
- (void)viewDidUnload;
- (void)viewDidDisappear:(BOOL)arg1;
- (void)viewWillDisappear:(BOOL)arg1;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)arg1;
- (void)viewWillAppear:(BOOL)arg1;
- (void)onPlayerShouldPausePlay:(id)arg1;
- (void)onPlayerWillStartToPlay:(id)arg1;
- (void)onAppWillEnterForeground:(id)arg1;
- (void)onAppDidEnterBackground:(id)arg1;
- (void)onAppDidBecomeActive:(id)arg1;
- (void)onAppWillResignActive:(id)arg1;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (BOOL)readyPlayItemInCurrentCover;
- (BOOL)playerWillPlayVarietyVideoMainItem;
- (void)ozReportChangeClarityDuration:(double)arg1;
- (void)ozReportPlayStoped;
- (void)ozReportVideoPlayCount;
- (void)ozReportDragReloadTime:(double)arg1;
- (void)ozReportDragFirstLoadTime:(double)arg1;
- (void)ozReportFlvReloadTime:(double)arg1;
- (void)ozReportFirstLoadTime:(double)arg1;
- (void)ozReportPlaySucceed;
- (void)ozReportCmdPlay:(id)arg1 sequence:(int)arg2 isContinuePlay:(BOOL)arg3;
- (void)statFlvDragReloadCount;
- (void)statFlvDragReloadTime:(double)arg1 reqtime:(double)arg2 alltime:(double)arg3 url:(id)arg4 speed:(int)arg5;
- (void)statFlvDragFirstLoadTime:(double)arg1 reqtime:(double)arg2 alltime:(double)arg3 isLoadOK:(BOOL)arg4 url:(id)arg5 speed:(int)arg6;
- (void)statFlvReloadCount;
- (void)statFlvReloadTime:(double)arg1 reqtime:(double)arg2 alltime:(double)arg3 url:(id)arg4 speed:(int)arg5;
- (void)statFlvCurrentSpeed:(int)arg1 url:(id)arg2;
- (void)statFlvFirstLoadTime:(double)arg1 reqtime:(double)arg2 alltime:(double)arg3 sequence:(int)arg4 loadVal:(int)arg5 url:(id)arg6 speed:(int)arg7;
- (void)statFlvLoadingTime:(double)arg1 url:(id)arg2 speed:(int)arg3;
- (BOOL)shouldReportForUrlStr:(id)arg1;
- (id)superHiberarchyViewController;
- (void)unregisterRotationFunctionBySuperHiberarchyViewController;
- (void)registerRotationFunctionBySuperHiberarchyViewController:(id)arg1;
- (void)forceChangeDeviceOrientation:(BOOL)arg1;
- (void)kkDismissViewControllerAnimated:(BOOL)arg1 completion:(CDUnknownBlockType)arg2;
- (void)kkDismissViewControllerAnimated:(BOOL)arg1 isCloseMediaPlayer:(BOOL)arg2 completion:(CDUnknownBlockType)arg3;
- (void)kkPresentViewControlleByFarthestVC:(id)arg1 animated:(BOOL)arg2 completion:(CDUnknownBlockType)arg3;
- (void)animationDidStop:(id)arg1 finished:(BOOL)arg2;
- (void)resumePlayer;
- (void)pausePlayer;
- (void)printError:(id)arg1 src:(id)arg2;
- (void)request:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)requestDidFinishLoad:(id)arg1;
- (void)playDLNAWithVideoID:(id)arg1;
- (void)requestGetURLWithVideoID:(id)arg1;
- (void)requestVideoKeyWithVideoID:(id)arg1;
- (void)requestVInfoWithVideoID:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (int)tableView:(id)arg1 numberOfRowsInSection:(int)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)showDLNAControl:(BOOL)arg1 view:(id)arg2;
- (void)dlnaControllerdidLoseConnection:(id)arg1;
- (void)dlnaControllerdidFailedToPlay:(id)arg1;
- (void)dlnaControllerdidStartToPlay:(id)arg1;
- (void)delaySeekValue:(id)arg1;
- (void)dlnaController:(id)arg1 didFindRenders:(id)arg2;
- (void)dlnaControllerdidStoped:(id)arg1;
- (void)layoutDLNAViews:(BOOL)arg1;
- (void)resetDLNAViews;
- (void)resetCtlWithNetworkChaged;
- (void)refreshTableWithRenders:(id)arg1;
- (void)returnBackPlay:(id)arg1;
- (void)dlnaCloseDown:(id)arg1;
- (void)dlnaRefreshDown:(id)arg1;
- (void)dlnaBtnClicked;
- (id)dlnaPlayBkgView:(BOOL)arg1 tip:(id)arg2;
- (id)btnDLNAReturn;
- (id)dlnaSearchingView;
- (id)dlnaTableView;
- (id)noneDLNATipView;
- (void)endCacheAndPlayProcess;
- (void)startPlayProcess;
- (void)reportBeforePlayerCloseOrSwitch2;
- (void)setPublicStatusOfReports;
- (int)reportEnumFromDataType:(int)arg1;
- (id)getReportDataDicWithParam1:(id)arg1 Val1:(id)arg2 Param2:(id)arg3 Val2:(id)arg4;
- (id)getBaseReportDataDic;
- (void)mediaPlayerCachedState:(int)arg1 withStepType:(int)arg2;
- (int)changeVideoDataTypeToFileType:(int)arg1;
- (void)mediaPlayerCachedState:(int)arg1 withCachFileIndex:(int)arg2 withIsFirstCache:(BOOL)arg3 withCurrentFileCachedNums:(int)arg4 withFileType:(int)arg5 withFileUrl:(id)arg6 stepType:(int)arg7;
- (int)countMP4Order:(float)arg1;
- (id)currentPlayingAddress;
- (id)currentPlayingMP4Address;
- (int)currentPlayingMP4Index;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly, nonatomic) BOOL needShare;
@property(readonly, nonatomic) NSDictionary *shareExtendInfo;
@property(readonly, nonatomic) QLShareFeed *shareFeedInfo;
@property(readonly) Class superclass;

@end

