//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "ClusterInfo.h"

@class AlbumInfo, NSMutableArray, NSMutableDictionary, NSString, SingerInfo;

__attribute__((visibility("hidden")))
@interface SongInfo : ClusterInfo
{
    long long song_ID;
    int song_Type;
    int song_error;
    NSString *song_DownLoadFilePath;
    int song_DownloadFileSize;
    NSString *song_IPODAssertURL;
    NSString *song_LyricFilePath;
    NSMutableArray *delegateArray;
    long long iFackSongId;
    BOOL song_HasFingerPrinted;
    long long fingerSongId;
    float addTime;
    int size;
    int n64Size;
    BOOL isWord;
    int nForbitFlag;
    int copyRight;
    int standardFileSize;
    int topFileSize;
    AlbumInfo *albumInfo;
    SingerInfo *singerInfo;
    NSString *kgeSongMid;
    BOOL hasCopyright;
    BOOL _isLongVoice;
    NSString *song_Introduction;
    NSString *song_goSoso;
    int validateStatus;
    NSString *song_Mid;
    NSString *song_Vid;
    int song_EQid;
    NSString *docid;
    int song_lang;
    int song_tag;
    int song_version;
    int isExclusive;
    int _cdIdx;
    int _belongCD;
    unsigned int _controlBits;
    int _song_ErrMsgId;
    int _flacSize;
    NSMutableDictionary *_dicRate2URL;
    double song_Duration;
}

+ (int)compareSongRateType:(int)arg1 to:(int)arg2;
+ (id)get320Mp3UrlFileNameInArray:(id)arg1;
+ (int)getLowerQuality:(int)arg1 isListen:(int)arg2;
+ (int)getLowerQuality:(int)arg1;
+ (int)convertESongTypeToSongRateType:(int)arg1;
+ (int)_convertSongRateTypeToESongType:(int)arg1;
+ (int)convertSongRateTypeToESongType:(int)arg1;
+ (int)getRateByExtName:(id)arg1;
+ (id)getExtNameByRate:(int)arg1;
+ (unsigned int)getBytePerSecond:(int)arg1;
+ (unsigned int)getFirstPieceCacheSongSizeByQuality:(int)arg1 songInfo:(id)arg2 duration:(float)arg3;
+ (id)qplayPredicate;
+ (BOOL)isExistLocalFileBySongType:(int)arg1 dbDownLoadFilePath:(id)arg2;
+ (id)translateSongFromNode:(struct _xmlNode *)arg1 fromServer:(BOOL)arg2 containHilightInfo:(BOOL)arg3 expInfo:(id *)arg4;
+ (id)translateSongFromNode:(struct _xmlNode *)arg1 fromServer:(BOOL)arg2;
+ (id)translateSongFromJsonData:(id)arg1;
+ (int)getURLIndex:(int)arg1;
+ (int)songRateTypeByQuality:(int)arg1;
@property(retain) NSMutableDictionary *dicRate2URL; // @synthesize dicRate2URL=_dicRate2URL;
@property int flacSize; // @synthesize flacSize=_flacSize;
@property int song_ErrMsgId; // @synthesize song_ErrMsgId=_song_ErrMsgId;
@property(nonatomic) unsigned int controlBits; // @synthesize controlBits=_controlBits;
@property BOOL isLongVoice; // @synthesize isLongVoice=_isLongVoice;
@property int belongCD; // @synthesize belongCD=_belongCD;
@property int cdIdx; // @synthesize cdIdx=_cdIdx;
@property int isExclusive; // @synthesize isExclusive;
@property(retain) NSString *kgeSongMid; // @synthesize kgeSongMid;
@property int song_version; // @synthesize song_version;
@property int song_tag; // @synthesize song_tag;
@property int song_lang; // @synthesize song_lang;
@property(retain) NSString *docid; // @synthesize docid;
@property int song_EQid; // @synthesize song_EQid;
@property(retain) NSString *song_Vid; // @synthesize song_Vid;
@property(retain) NSString *song_Mid; // @synthesize song_Mid;
@property int validateStatus; // @synthesize validateStatus;
@property(retain) AlbumInfo *albumInfo; // @synthesize albumInfo;
@property(retain) SingerInfo *singerInfo; // @synthesize singerInfo;
@property int copyRight; // @synthesize copyRight;
@property int nForbitFlag; // @synthesize nForbitFlag;
@property BOOL isWord; // @synthesize isWord;
@property int topFileSize; // @synthesize topFileSize;
@property int standardFileSize; // @synthesize standardFileSize;
@property int n64Size; // @synthesize n64Size;
@property int size; // @synthesize size;
@property float addTime; // @synthesize addTime;
@property(retain) NSString *song_goSoso; // @synthesize song_goSoso;
@property(retain) NSString *song_Introduction; // @synthesize song_Introduction;
@property(nonatomic) double song_Duration; // @synthesize song_Duration;
@property long long iFackSongId; // @synthesize iFackSongId;
@property(nonatomic) long long fingerSongId; // @synthesize fingerSongId;
@property(nonatomic) BOOL song_HasFingerPrinted; // @synthesize song_HasFingerPrinted;
@property(retain) NSMutableArray *delegateArray; // @synthesize delegateArray;
@property int song_error; // @synthesize song_error;
@property(retain) NSString *song_LyricFilePath; // @synthesize song_LyricFilePath;
@property(retain) NSString *song_IPODAssertURL; // @synthesize song_IPODAssertURL;
@property(readonly) int song_Type; // @synthesize song_Type;
@property(readonly) long long song_ID; // @synthesize song_ID;
- (void).cxx_destruct;
- (id)get320Mp3UrlFileName;
- (BOOL)_isControlBitsValided;
- (unsigned int)getHeaderSizeByRate:(int)arg1;
- (id)getSongInfoKey;
- (id)_createURLByRate:(int)arg1;
- (BOOL)isExistFlac;
- (BOOL)isExist320Kmp3;
- (id)getURLByRate:(int)arg1;
- (void)setURL:(id)arg1 byRate:(int)arg2;
- (BOOL)supportByQPlay;
- (BOOL)isHQSongConfigured;
- (id)getQPlaySongURLString:(int)arg1;
- (id)getQPlaySongURLString;
- (BOOL)playable:(BOOL)arg1 checkQPlay:(BOOL)arg2 checkCopyright:(BOOL)arg3;
- (id)getSongUrlForDownloadedFile;
- (BOOL)isEmptySongUrl;
@property BOOL hasCopyright; // @synthesize hasCopyright;
@property(readonly) __weak NSString *song_ErrMsg;
- (void)deleteAllMaybeFiles;
- (id)allMayBeFiles;
- (void)startFreshSongInfo;
- (BOOL)isUpLimitRate:(int)arg1;
- (int)_songRateTypeExisted;
- (int)_songRateTypeCapacity;
- (BOOL)isCreateRadioEnable;
- (BOOL)isShouldShowSosoIcon;
- (BOOL)isAutoSaveEnable;
- (BOOL)isDownloadEnable;
- (BOOL)isShareEnable;
- (BOOL)isPlayEnable;
- (BOOL)isAddToEnable;
- (BOOL)isAddToLoveEnable;
- (BOOL)_isQQSongWithoutCopyrightAndUrl;
- (BOOL)isGososoSong;
- (BOOL)isMVSongAll;
- (BOOL)isQQSongAll;
- (BOOL)isSosoSong;
- (BOOL)isIPodSong;
- (BOOL)isDownloadOk;
- (BOOL)isExistLocalFile;
- (id)initWithCoder:(id)arg1;
- (id)getFileTitle;
- (id)fixSong_DownLoadFilePath:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)description;
@property(readonly) __weak NSString *song_Singer_Index;
@property(readonly) __weak NSString *song_Singer;
@property(readonly) __weak NSString *song_Album_Index;
@property(readonly) __weak NSString *song_Album;
@property(readonly) unsigned long singerId;
@property(readonly) unsigned long albumId;
@property(readonly) int song_DownloadFileRate;
- (int)song_DownloadFileRate_downloadAll;
- (int)getSongRateTypeByQuality:(int)arg1;
@property int song_DownloadFileSize; // @synthesize song_DownloadFileSize;
@property(retain) NSString *song_DownLoadFilePath; // @synthesize song_DownLoadFilePath;
@property(retain) NSString *dbDownLoadFilePath;
- (id)song_Name_Index;
- (void)setSong_Name_Index:(id)arg1;
- (id)song_Name;
- (void)setSong_Name:(id)arg1;
- (void)addDelegate:(id)arg1;
- (id)init;
- (id)initWithSongType:(int)arg1 songID:(long long)arg2;

@end

