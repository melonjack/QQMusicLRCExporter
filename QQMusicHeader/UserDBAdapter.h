//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "SongDBAdapter.h"

__attribute__((visibility("hidden")))
@interface UserDBAdapter : SongDBAdapter
{
}

+ (char *)TranslateRowItemToString:(struct SQueryResult)arg1 rowItem:(struct SRowItem *)arg2 columnName:(int)arg3;
+ (double)TranslateRowItemToDouble:(struct SQueryResult)arg1 rowItem:(struct SRowItem *)arg2 columnName:(int)arg3;
+ (long long)TranslateRowItemToInt:(struct SQueryResult)arg1 rowItem:(struct SRowItem *)arg2 columnName:(int)arg3;
+ (id)translateFolder:(id)arg1;
+ (id)translateFolder:(id)arg1 Song:(id)arg2 expInfo:(id)arg3;
+ (id)translateFolder:(id)arg1 FolderSong:(id)arg2;
+ (id)translateNewFolderValue:(id)arg1;
+ (id)translateOldFolderValue:(id)arg1;
+ (id)TranslateRowItemToSong:(struct SQueryResult)arg1 rowItem:(struct SRowItem *)arg2;
+ (id)TranslateRowItemToFolder:(struct SQueryResult)arg1 rowItem:(struct SRowItem *)arg2;
+ (id)TranslateRowItemToFolderSong:(struct SQueryResult)arg1 rowItem:(struct SRowItem *)arg2;
+ (id)shareUserDBAdapter;
- (void)saveFolderCountToDB:(id)arg1;
- (void)changeFakeSongId:(id)arg1 fromCloudFolder:(id)arg2;
- (void)changeFolderId:(unsigned int)arg1 toFolderId:(unsigned int)arg2 FolderType:(int)arg3 forUser:(long long)arg4;
- (long long)getMaxFavoriteSongAddTime:(unsigned long)arg1 folderId:(int)arg2;
- (BOOL)isSongInFolder:(id)arg1 FolderInfo:(id)arg2;
- (unsigned long)getExistFileSongsCount:(id)arg1 uin:(unsigned long)arg2;
- (unsigned long)getSongsCount:(id)arg1 uin:(unsigned long)arg2;
- (id)getSongs:(id)arg1 OrderBy:(id)arg2;
- (id)getSongsByFolder:(id)arg1 AndWhere:(id)arg2 OrderBy:(id)arg3;
- (id)getAllSongsByOldFolder:(id)arg1 AndWhere:(id)arg2 OrderBy:(id)arg3;
- (id)getNewFolderByUser:(unsigned long)arg1 FolderId:(int)arg2 Tid:(long long)arg3 FolderType:(int)arg4;
- (id)getFolderByUser:(unsigned long)arg1 FolderId:(int)arg2 FolderType:(int)arg3;
- (id)getFoldersByUser:(unsigned long)arg1 OrderBy:(id)arg2;
- (BOOL)insertFolder:(id)arg1;
- (BOOL)updateFolder:(id)arg1 Data:(id)arg2;
- (BOOL)updateFolder:(id)arg1 Song:(id)arg2 Attribute:(id)arg3;
- (BOOL)updateFolder:(id)arg1 Song:(id)arg2 Attribute:(id)arg3 extraWhere:(id)arg4;
- (BOOL)insertFolder:(id)arg1 Song:(id)arg2 ExpInfo:(id)arg3;
- (void)insertFolder:(id)arg1 Songs:(id)arg2 expInfos:(id)arg3;
- (void)insertFolderByFolderSongs:(id)arg1 FolderSongs:(id)arg2;
- (void)insertFolderByFolderSongs_DB13:(id)arg1 FolderSongs:(id)arg2;
- (void)deleteFolder:(id)arg1 Songs:(id)arg2;
- (void)deleteFolder2:(id)arg1 Songs:(id)arg2;
- (void)deleteFolderByFolderSongs:(id)arg1 folderSongs:(id)arg2;
- (BOOL)isExistDB:(id)arg1 Folder:(id)arg2;
- (BOOL)insertDB:(id)arg1 Folder:(id)arg2 Song:(id)arg3 ExpInfo:(id)arg4;
- (BOOL)deleteDB:(id)arg1 Folder:(id)arg2 SongId:(long long)arg3 Type:(int)arg4;
- (BOOL)clearFolder:(id)arg1;
- (BOOL)updateUinToDeletedBySeq:(int)arg1;
- (BOOL)deleteFolderBySeq:(int)arg1 deleteWaitSynSongs:(BOOL)arg2;
- (BOOL)deleteFolderBySeq:(int)arg1;
- (BOOL)deleteLocalByUin:(unsigned long)arg1 Folder:(int)arg2 deleteWaitSynSongs:(BOOL)arg3;
- (BOOL)deleteLocalByUin:(unsigned long)arg1 Folder:(int)arg2;
- (BOOL)createTable:(id)arg1 newFolderTableName:(id)arg2 newFolderSongTableName:(id)arg3;
- (BOOL)createTable:(id)arg1 folderTableName:(id)arg2 folderSongTableName:(id)arg3;
- (void)deleteUnusedSong:(id)arg1;
- (BOOL)deleteFolder:(id)arg1 SongId:(long long)arg2 SongType:(int)arg3;
- (BOOL)isDB:(id)arg1 UsingSongId:(long long)arg2 SongType:(int)arg3;
- (BOOL)testNewfolderSongTable;
- (BOOL)testNewFolderTable;
- (BOOL)testSongTable;
- (void)rebuildDB;
- (BOOL)isDBNeedRebuild;

@end

