//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

@class NSMutableArray;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AMREncodeFloat {
    void *_field1;
};

struct AVConnectionType;

struct AVPicture {
    char *_field1[4];
    int _field2[4];
    int _field3;
    int _field4;
    int _field5;
    int _field6;
};

struct AVPlayerState;

struct Allocator<capu::GenericListNode<EtchRuntimeListener *>>;

struct Allocator<capu::GenericListNode<const EtchObjectType *>>;

struct AppInfo {
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field4;
};

struct Attachment {
    char _field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
    struct vector<char, std::allocator<char>> _field3;
};

struct AudioBuffer {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
};

struct AudioBufferList {
    unsigned int _field1;
    struct AudioBuffer _field2[1];
};

struct AudioQueueBuffer {
    unsigned int _field1;
    void *_field2;
    unsigned int _field3;
    void *_field4;
    unsigned int _field5;
    struct AudioStreamPacketDescription *_field6;
    unsigned int _field7;
};

struct AudioStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct AudioStreamPacketDescription {
    long long mStartOffset;
    unsigned int mVariableFramesInPacket;
    unsigned int mDataByteSize;
};

struct BMWRemotingClientFactory {
    CDUnknownFunctionPointerType *_field1;
};

struct CATransform3D {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
    float _field10;
    float _field11;
    float _field12;
    float _field13;
    float _field14;
    float _field15;
    float _field16;
};

struct CGAffineTransform {
    float a;
    float b;
    float c;
    float d;
    float tx;
    float ty;
};

struct CGPoint {
    float x;
    float y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    float width;
    float height;
};

struct CMutex {
    struct _opaque_pthread_mutex_t m_mutex;
};

struct CStatistic {
    unsigned int _field1;
    unsigned int _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
    unsigned short _field6;
    unsigned int _field7;
    unsigned short _field8;
    unsigned char _field9[5120];
};

struct CachedFailedData {
    char wasCachedFailed;
    int failedCacheOrder;
};

struct Comparator;

struct ConsoleLogAppender {
    CDUnknownFunctionPointerType *_field1;
    struct Mutex _field2;
};

struct ContactInfo {
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field4;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field5;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field6;
};

struct DNSCache;

struct EtchAsyncResult<EtchBool>;

struct EtchAsyncResult<EtchHashTable<capu::SmartPointer<EtchObject>, capu::SmartPointer<EtchObject>, EtchComparator<capu::SmartPointer<EtchObject>>, EtchObjectHash>>;

struct EtchAsyncResult<EtchInt32>;

struct EtchAsyncResult<EtchNativeArray<signed char>>;

struct EtchAsyncResult<EtchObject>;

struct EtchAsyncResult<EtchString>;

struct EtchAsyncResult<de_bmw_idrive_BMWRemoting::BMWRemoting::VersionInfo>;

struct EtchAsyncResultNone;

struct EtchBool;

struct EtchByte;

struct EtchComparator<EtchString>;

struct EtchDeliveryService;

struct EtchException;

struct EtchHashTable<EtchString, EtchObject *, EtchComparator<EtchString>, EtchObjectHash> {
    CDUnknownFunctionPointerType *_field1;
    struct List<const EtchObjectType *, capu::Allocator<capu::GenericListNode<const EtchObjectType *>>, capu::Comparator> _field2;
    struct HashTable<EtchString, EtchObject *, EtchComparator<EtchString>, EtchObjectHash> _field3;
};

struct EtchHashTable<capu::SmartPointer<EtchObject>, capu::SmartPointer<EtchObject>, EtchComparator<capu::SmartPointer<EtchObject>>, EtchObjectHash>;

struct EtchInt32 {
    CDUnknownFunctionPointerType *_field1;
    struct List<const EtchObjectType *, capu::Allocator<capu::GenericListNode<const EtchObjectType *>>, capu::Comparator> _field2;
    int _field3;
};

struct EtchLogger {
    CDUnknownFunctionPointerType *_field1;
    struct HashSet<capu::LogContext *, capu::Comparator, capu::CapuDefaultHashFunction> _field2;
    struct HashSet<capu::ILogAppender *, capu::Comparator, capu::CapuDefaultHashFunction> _field3;
    struct LogContext *_field4;
    struct LogContext *_field5;
    struct LogContext *_field6;
    struct LogContext *_field7;
    struct LogContext *_field8;
    struct LogContext *_field9;
    struct LogContext *_field10;
    struct LogContext *_field11;
};

struct EtchNativeArray<capu::SmartPointer<EtchObject>>;

struct EtchNativeArray<signed char>;

struct EtchObject;

struct EtchObjectType;

struct EtchResources {
    struct EtchResources *_field1;
    struct EtchHashTable<EtchString, EtchObject *, EtchComparator<EtchString>, EtchObjectHash> _field2;
};

struct EtchRuntime {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct EtchLogger _field3;
    struct ConsoleLogAppender _field4;
    unsigned long long _field5;
    struct Mutex _field6;
    struct List<EtchRuntimeListener *, capu::Allocator<capu::GenericListNode<EtchRuntimeListener *>>, capu::Comparator> _field7;
};

struct EtchRuntimeListener;

struct EtchShort;

struct EtchStack;

struct EtchString {
    CDUnknownFunctionPointerType *_field1;
    struct List<const EtchObjectType *, capu::Allocator<capu::GenericListNode<const EtchObjectType *>>, capu::Comparator> _field2;
    char *_field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct EtchValueFactory;

struct ExceptionUpload {
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
    long long _field4;
    struct vector<exceptionupload::Attachment, std::allocator<exceptionupload::Attachment>> _field5;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field6;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field7;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field8;
    struct MobileDetail _field9;
    struct RunInfo _field10;
    struct ContactInfo _field11;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field12;
    struct vector<exceptionupload::AppInfo, std::allocator<exceptionupload::AppInfo>> _field13;
    long long _field14;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field15;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field16;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field17;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field18;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field19;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field20;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field21;
    struct vector<exceptionupload::PlugInfo, std::allocator<exceptionupload::PlugInfo>> _field22;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field23;
};

struct ExceptionUploadPackage {
    struct vector<exceptionupload::ExceptionUpload, std::allocator<exceptionupload::ExceptionUpload>> _field1;
};

struct FLAC__StreamDecoderPrivate;

struct FLAC__StreamDecoderProtected;

struct FloorInfo {
    unsigned int _field1;
    char *_field2;
    char *_field3;
    char *_field4;
};

struct GenericListNode<EtchRuntimeListener *> {
    struct EtchRuntimeListener *_field1;
    struct GenericListNode<EtchRuntimeListener *> *_field2;
    struct GenericListNode<EtchRuntimeListener *> *_field3;
};

struct GenericListNode<const EtchObjectType *> {
    struct EtchObjectType *_field1;
    struct GenericListNode<const EtchObjectType *> *_field2;
    struct GenericListNode<const EtchObjectType *> *_field3;
};

struct GifState {
    struct AVPicture _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    unsigned int *_field8;
    int _field9;
    int _field10;
    char *_field11;
    char *_field12;
    void *_field13;
    unsigned char _field14[768];
    unsigned char _field15[768];
};

struct HashSet<capu::ILogAppender *, capu::Comparator, capu::CapuDefaultHashFunction> {
    struct HashTable<capu::ILogAppender *, char, capu::Comparator, capu::CapuDefaultHashFunction> _field1;
};

struct HashSet<capu::LogContext *, capu::Comparator, capu::CapuDefaultHashFunction> {
    struct HashTable<capu::LogContext *, char, capu::Comparator, capu::CapuDefaultHashFunction> _field1;
};

struct HashTable<EtchString, EtchObject *, EtchComparator<EtchString>, EtchObjectHash> {
    CDUnknownFunctionPointerType *_field1;
    unsigned char _field2;
    unsigned int _field3;
    unsigned int _field4;
    struct HashTableEntry **_field5;
    struct HashTableEntry *_field6;
    struct HashTableEntry *_field7;
    struct HashTableEntry *_field8;
    unsigned int _field9;
    _Bool _field10;
    struct EtchComparator<EtchString> _field11;
};

struct HashTable<capu::ILogAppender *, char, capu::Comparator, capu::CapuDefaultHashFunction> {
    CDUnknownFunctionPointerType *_field1;
    unsigned char _field2;
    unsigned int _field3;
    unsigned int _field4;
    struct HashTableEntry **_field5;
    struct HashTableEntry *_field6;
    struct HashTableEntry *_field7;
    struct HashTableEntry *_field8;
    unsigned int _field9;
    _Bool _field10;
    struct Comparator _field11;
};

struct HashTable<capu::LogContext *, char, capu::Comparator, capu::CapuDefaultHashFunction> {
    CDUnknownFunctionPointerType *_field1;
    unsigned char _field2;
    unsigned int _field3;
    unsigned int _field4;
    struct HashTableEntry **_field5;
    struct HashTableEntry *_field6;
    struct HashTableEntry *_field7;
    struct HashTableEntry *_field8;
    unsigned int _field9;
    _Bool _field10;
    struct Comparator _field11;
};

struct HashTableEntry;

struct HttpClient {
    struct Socket _field1;
    struct HttpResponse *_field2;
    struct HttpRequest *_field3;
    struct SocketAsyncEventArgs *_field4;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field5;
    struct list<wxvoice::SocketAsyncEventArgs *, std::allocator<wxvoice::SocketAsyncEventArgs *>> _field6;
    CDUnknownFunctionPointerType _field7;
    int _field8;
    int _field9;
    struct MutexLock _field10;
    int _field11;
};

struct HttpRequest {
    int _field1;
    int _field2;
    _Bool _field3;
    _Bool _field4;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field5;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field6;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field7;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field8;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field9;
};

struct HttpResponse {
    int _field1;
    int _field2;
    int _field3;
    char *_field4;
    char *_field5;
    _Bool _field6;
};

struct ICMPHeader {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
};

struct IDEtchSessionCppAdaptor {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct JKConstBuffer {
    struct JKConstPtrRange _field1;
};

struct JKConstPtrRange {
    char *_field1;
    unsigned int _field2;
};

struct JKEncodeCache {
    id _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct JKEncodeState {
    struct JKManagedBuffer _field1;
    struct JKManagedBuffer _field2;
    unsigned int _field3;
    struct JKFastClassLookup _field4;
    struct JKEncodeCache _field5[1024];
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    id _field9;
    id _field10;
    SEL _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownBlockType _field13;
};

struct JKFastClassLookup {
    void *_field1;
    void *_field2;
    void *_field3;
    void *_field4;
    void *_field5;
};

struct JKHashTableEntry {
    unsigned int _field1;
    id _field2;
    id _field3;
};

struct JKManagedBuffer {
    struct JKPtrRange _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct JKObjCImpCache {
    Class _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
};

struct JKObjectStack {
    void **_field1;
    void **_field2;
    unsigned int *_field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
};

struct JKParseState {
    unsigned int _field1;
    struct JKConstBuffer _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    struct JKParseToken _field9;
    struct JKObjectStack _field10;
    struct JKTokenCache _field11;
    struct JKObjCImpCache _field12;
    id _field13;
    int _field14;
    char _field15;
};

struct JKParseToken {
    struct JKConstPtrRange _field1;
    unsigned int _field2;
    struct JKTokenValue _field3;
    struct JKManagedBuffer _field4;
};

struct JKPtrRange {
    char *_field1;
    unsigned int _field2;
};

struct JKTokenCache {
    struct JKTokenCacheItem *_field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned char _field4[1024];
};

struct JKTokenCacheItem;

struct JKTokenValue {
    struct JKConstPtrRange _field1;
    unsigned int _field2;
    unsigned int _field3;
    union {
        long long _field1;
        unsigned long long _field2;
        double _field3;
    } _field4;
    struct JKTokenCacheItem *_field5;
};

struct JceInputStream<analyticstaf::BufferReader> {
    char *_field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct JceOutputStream<analyticstaf::BufferWriter> {
    char *_field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct List<EtchRuntimeListener *, capu::Allocator<capu::GenericListNode<EtchRuntimeListener *>>, capu::Comparator> {
    CDUnknownFunctionPointerType *_field1;
    struct GenericListNode<EtchRuntimeListener *> _field2;
    unsigned int _field3;
    struct Comparator _field4;
    struct Allocator<capu::GenericListNode<EtchRuntimeListener *>> _field5;
};

struct List<const EtchObjectType *, capu::Allocator<capu::GenericListNode<const EtchObjectType *>>, capu::Comparator> {
    CDUnknownFunctionPointerType *_field1;
    struct GenericListNode<const EtchObjectType *> _field2;
    unsigned int _field3;
    struct Comparator _field4;
    struct Allocator<capu::GenericListNode<const EtchObjectType *>> _field5;
};

struct LogContext;

struct LogLevel;

struct LogQueue {
    char *_field1;
    vector_8f9e92da _field2;
};

struct LogQueueElement;

struct LoginReturn {
    char _field1;
    int _field2;
};

struct Loop {
    struct Thread _field1;
    struct MutexLock _field2;
    _Bool _field3;
    _Bool _field4;
    int _field5;
    struct list<wxvoice::SocketAsyncEventArgs *, std::allocator<wxvoice::SocketAsyncEventArgs *>> _field6;
    struct vector<wxvoice::SocketAsyncEventArgs *, std::allocator<wxvoice::SocketAsyncEventArgs *>> _field7;
    struct set<int, std::less<int>, std::allocator<int>> _field8;
};

struct MapMode;

struct MixPackage {
    struct map<int, std::vector<char, std::allocator<char>>, std::less<int>, std::allocator<std::pair<const int, std::vector<char, std::allocator<char>>>>> _field1;
};

struct MobileDetail {
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field4;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field5;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field6;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field7;
    long long _field8;
    long long _field9;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field10;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field11;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field12;
};

struct Mutex {
    struct _opaque_pthread_mutex_t _field1;
    struct _opaque_pthread_mutexattr_t {
        long _field1;
        char _field2[8];
    } _field2;
};

struct MutexLock {
    struct _opaque_pthread_mutex_t _field1;
};

struct NSDictionary {
    Class _field1;
};

struct OpaqueAudioQueue;

struct PCMFifoBuffer;

struct PlugInfo;

struct QLMovieItem {
    Class _field1;
};

struct QMAudioConverterSetting {
    struct AudioStreamBasicDescription inputASBD;
    struct AudioStreamBasicDescription outputASBD;
    NSMutableArray *convertDataArray;
    long long mStartOffset;
};

struct RHMIMetaData;

struct RHMIResourceType;

struct RemoteBMWRemotingServer {
    CDUnknownFunctionPointerType *_field1;
    struct EtchRuntime *_field2;
    struct EtchDeliveryService *_field3;
    struct EtchValueFactory *_field4;
    struct EtchStack *_field5;
    CDUnknownFunctionPointerType *_field6;
    struct EtchInt32 _field7;
    struct EtchInt32 _field8;
    struct EtchRuntime *_field9;
    CDUnknownFunctionPointerType *_field10;
    CDUnknownFunctionPointerType *_field11;
    struct EtchInt32 _field12;
    struct EtchInt32 _field13;
};

struct RequestPackage {
    char _field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field4;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field5;
    int _field6;
    struct vector<char, std::allocator<char>> _field7;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field8;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field9;
    char _field10;
    char _field11;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field12;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field13;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field14;
    char _field15;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field16;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field17;
};

struct ResponsePackage {
    char _field1;
    int _field2;
    struct vector<char, std::allocator<char>> _field3;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field4;
    char _field5;
    char _field6;
    long long _field7;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field8;
};

struct RunInfo {
    float _field1;
    float _field2;
    long long _field3;
    long long _field4;
    long long _field5;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field6;
};

struct SCollectResult {
    int m_eErrorCollectType;
    int m_ifolderID;
};

struct SColorStyle {
    char index;
    short hue;
    char saturation;
    char bright;
    char alpha;
    unsigned long showColor;
};

struct SColumnItemValue;

struct SCompareResult {
    unsigned int m_iFromCount;
    unsigned int m_iToCount;
    int m_eCompareResult;
    unsigned int m_iFrom;
    unsigned int m_iLength;
    unsigned int m_iTo;
};

struct SFlyingParam {
    float fTop;
    float fMarginLeft;
    float fContentWidth;
    float fDuration;
    float fMaxAlpha;
};

struct SLineIndent {
    float _field1;
    float _field2;
    char _field3;
    char _field4;
};

struct SNode {
    void *_field1;
    struct SNode *_field2;
};

struct SQueryResult {
    int _field1;
    int _field2;
    struct SRowItem *_field3;
    void *_field4;
    int *_field5;
};

struct SRowItem {
    struct SColumnItemValue *_field1;
    struct SRowItem *_field2;
};

struct SmartPointer<EtchAsyncResult<EtchBool>> {
    struct EtchAsyncResult<EtchBool> *_field1;
    unsigned int *_field2;
};

struct SmartPointer<EtchAsyncResult<EtchHashTable<capu::SmartPointer<EtchObject>, capu::SmartPointer<EtchObject>, EtchComparator<capu::SmartPointer<EtchObject>>, EtchObjectHash>>> {
    struct EtchAsyncResult<EtchHashTable<capu::SmartPointer<EtchObject>, capu::SmartPointer<EtchObject>, EtchComparator<capu::SmartPointer<EtchObject>>, EtchObjectHash>> *_field1;
    unsigned int *_field2;
};

struct SmartPointer<EtchAsyncResult<EtchInt32>> {
    struct EtchAsyncResult<EtchInt32> *_field1;
    unsigned int *_field2;
};

struct SmartPointer<EtchAsyncResult<EtchNativeArray<signed char>>> {
    struct EtchAsyncResult<EtchNativeArray<signed char>> *_field1;
    unsigned int *_field2;
};

struct SmartPointer<EtchAsyncResult<EtchObject>> {
    struct EtchAsyncResult<EtchObject> *_field1;
    unsigned int *_field2;
};

struct SmartPointer<EtchAsyncResult<EtchString>> {
    struct EtchAsyncResult<EtchString> *_field1;
    unsigned int *_field2;
};

struct SmartPointer<EtchAsyncResult<de_bmw_idrive_BMWRemoting::BMWRemoting::VersionInfo>> {
    struct EtchAsyncResult<de_bmw_idrive_BMWRemoting::BMWRemoting::VersionInfo> *_field1;
    unsigned int *_field2;
};

struct SmartPointer<EtchAsyncResultNone> {
    struct EtchAsyncResultNone *_field1;
    unsigned int *_field2;
};

struct SmartPointer<EtchBool> {
    struct EtchBool *_field1;
    unsigned int *_field2;
};

struct SmartPointer<EtchByte> {
    struct EtchByte *_field1;
    unsigned int *_field2;
};

struct SmartPointer<EtchException> {
    struct EtchException *_field1;
    unsigned int *_field2;
};

struct SmartPointer<EtchHashTable<capu::SmartPointer<EtchObject>, capu::SmartPointer<EtchObject>, EtchComparator<capu::SmartPointer<EtchObject>>, EtchObjectHash>> {
    struct EtchHashTable<capu::SmartPointer<EtchObject>, capu::SmartPointer<EtchObject>, EtchComparator<capu::SmartPointer<EtchObject>>, EtchObjectHash> *_field1;
    unsigned int *_field2;
};

struct SmartPointer<EtchInt32> {
    struct EtchInt32 *_field1;
    unsigned int *_field2;
};

struct SmartPointer<EtchNativeArray<capu::SmartPointer<EtchObject>>> {
    struct EtchNativeArray<capu::SmartPointer<EtchObject>> *_field1;
    unsigned int *_field2;
};

struct SmartPointer<EtchNativeArray<signed char>> {
    struct EtchNativeArray<signed char> *_field1;
    unsigned int *_field2;
};

struct SmartPointer<EtchObject> {
    struct EtchObject *_field1;
    unsigned int *_field2;
};

struct SmartPointer<EtchShort> {
    struct EtchShort *_field1;
    unsigned int *_field2;
};

struct SmartPointer<EtchString> {
    struct EtchString *_field1;
    unsigned int *_field2;
};

struct SmartPointer<de_bmw_idrive_BMWRemoting::AVConnectionType> {
    struct AVConnectionType *_field1;
    unsigned int *_field2;
};

struct SmartPointer<de_bmw_idrive_BMWRemoting::AVPlayerState> {
    struct AVPlayerState *_field1;
    unsigned int *_field2;
};

struct SmartPointer<de_bmw_idrive_BMWRemoting::BMWRemoting::RHMIMetaData> {
    struct RHMIMetaData *_field1;
    unsigned int *_field2;
};

struct SmartPointer<de_bmw_idrive_BMWRemoting::BMWRemoting::VersionInfo> {
    struct VersionInfo *_field1;
    unsigned int *_field2;
};

struct SmartPointer<de_bmw_idrive_BMWRemoting::LogLevel> {
    struct LogLevel *_field1;
    unsigned int *_field2;
};

struct SmartPointer<de_bmw_idrive_BMWRemoting::MapMode> {
    struct MapMode *_field1;
    unsigned int *_field2;
};

struct SmartPointer<de_bmw_idrive_BMWRemoting::RHMIResourceType> {
    struct RHMIResourceType *_field1;
    unsigned int *_field2;
};

struct SmartPointer<de_bmw_idrive_BMWRemoting::VoicePriorityType> {
    struct VoicePriorityType *_field1;
    unsigned int *_field2;
};

struct Socket {
    int _field1;
    _Bool _field2;
    struct sockaddr_in _field3;
    struct Loop *_field4;
    int _field5;
    struct DNSCache _field6;
};

struct SocketAsyncEventArgs;

struct SpeexBits {
    char *chars;
    int nbBits;
    int charPtr;
    int bitPtr;
    int owner;
    int overflow;
    int buf_size;
    int reserved1;
    void *reserved2;
};

struct SummaryInfo {
    long long _field1;
    char _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field4;
};

struct SvNetReq {
    char _field1[256];
    void *_field2;
    void *_field3;
    _Bool _field4;
};

struct TWaveHeader {
    char _field1[4];
    int _field2;
    char _field3[4];
    char _field4[4];
    int _field5;
    short _field6;
    short _field7;
    int _field8;
    int _field9;
    short _field10;
    short _field11;
    char _field12[4];
    int _field13;
};

struct Thread {
    struct _opaque_pthread_t *_field1;
    CDUnknownFunctionPointerType _field2;
    void *_field3;
    _Bool _field4;
    _Bool _field5;
};

struct UIEdgeInsets {
    float top;
    float left;
    float bottom;
    float right;
};

struct UserInfoPackage {
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field4;
    struct map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::vector<char, std::allocator<char>>>>> _field5;
    char _field6;
    struct vector<userinfo::SummaryInfo, std::allocator<userinfo::SummaryInfo>> _field7;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field8;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field9;
    struct MobileDetail _field10;
};

struct VersionInfo;

struct VoicePriorityType;

struct WXVoiceEngine {
    struct Loop _field1;
    struct HttpRequest _field2;
    struct HttpResponse _field3;
    struct HttpClient _field4;
};

struct _Alloc_hider {
    char *_field1;
};

struct _CgCond;

struct _CgHttpServer;

struct _CgMutex;

struct _CgNetworkInterface;

struct _CgString;

struct _CgThread;

struct _CgUpnpAction {
    char _field1;
    struct _CgUpnpAction *_field2;
    struct _CgUpnpAction *_field3;
    void *_field4;
    struct _CgXmlNode *_field5;
    struct _CgUpnpArgument *_field6;
    CDUnknownFunctionPointerType _field7;
    struct _CgUpnpStatus *_field8;
    void *_field9;
};

struct _CgUpnpAllowedValuesList;

struct _CgUpnpArgument;

struct _CgUpnpAvProtocolInfo;

struct _CgUpnpAvRenderer {
    struct _CgMutex *_field1;
    struct _CgUpnpDevice *_field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    struct _CgUpnpAvProtocolInfo *_field6;
    void *_field7;
};

struct _CgUpnpAvServer {
    struct _CgMutex *_field1;
    struct _CgUpnpDevice *_field2;
    struct _CgXmlNode *_field3;
    int _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    struct _CgUpnpAvProtocolInfo *_field8;
    struct _CgNetworkInterface *_field9;
    void *_field10;
};

struct _CgUpnpControlPoint {
    struct _CgMutex *_field1;
    struct _CgXmlNode *_field2;
    struct _CgUpnpDevice *_field3;
    struct _CgUpnpSSDPServer *_field4;
    struct _CgUpnpSSDPResponseServer *_field5;
    struct _CgHttpServer *_field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    struct _CgUpnpEventListenerList *_field11;
    int _field12;
    struct _CgString *_field13;
    int _field14;
    int _field15;
    void *_field16;
    struct _CgThread *_field17;
    struct _CgMutex *_field18;
    struct _CgCond *_field19;
    struct _CgNetworkInterface *_field20;
};

struct _CgUpnpDevice {
    char _field1;
    struct _CgUpnpDevice *_field2;
    struct _CgUpnpDevice *_field3;
    struct _CgXmlNode *_field4;
    struct _CgXmlNode *_field5;
    struct _CgUpnpDevice *_field6;
    struct _CgUpnpDevice *_field7;
    struct _CgUpnpService *_field8;
    struct _CgUpnpIcon *_field9;
    struct _CgMutex *_field10;
    struct _CgHttpServer *_field11;
    struct _CgUpnpSSDPServer *_field12;
    struct _CgThread *_field13;
    CDUnknownFunctionPointerType _field14;
    struct _CgString *_field15;
    int _field16;
    int _field17;
    struct _CgUpnpSSDPPacket *_field18;
    void *_field19;
    struct _CgNetworkInterface *_field20;
};

struct _CgUpnpEventListenerList;

struct _CgUpnpIcon {
    char _field1;
    struct _CgUpnpIcon *_field2;
    struct _CgUpnpIcon *_field3;
    struct _CgXmlNode *_field4;
};

struct _CgUpnpSSDPPacket;

struct _CgUpnpSSDPResponseServer;

struct _CgUpnpSSDPServer;

struct _CgUpnpService {
    char _field1;
    struct _CgUpnpService *_field2;
    struct _CgUpnpService *_field3;
    struct _CgXmlNode *_field4;
    struct _CgXmlNode *_field5;
    struct _CgUpnpAction *_field6;
    struct _CgUpnpStateVariable *_field7;
    void *_field8;
    struct _CgMutex *_field9;
    struct _CgUpnpSubscriber *_field10;
    char _field11;
    struct _CgString *_field12;
    long _field13;
    void *_field14;
    unsigned int _field15;
    int _field16;
};

struct _CgUpnpStateVariable {
    char _field1;
    struct _CgUpnpStateVariable *_field2;
    struct _CgUpnpStateVariable *_field3;
    struct _CgUpnpAllowedValuesList *_field4;
    void *_field5;
    struct _CgXmlNode *_field6;
    void *_field7;
    void *_field8;
    struct _CgString *_field9;
    CDUnknownFunctionPointerType _field10;
    struct _CgUpnpStatus *_field11;
    void *_field12;
};

struct _CgUpnpStatus;

struct _CgUpnpSubscriber;

struct _CgXmlAttribute;

struct _CgXmlNode {
    char _field1;
    struct _CgXmlNode *_field2;
    struct _CgXmlNode *_field3;
    struct _CgString *_field4;
    struct _CgString *_field5;
    struct _CgXmlAttribute *_field6;
    struct _CgXmlNode *_field7;
    struct _CgXmlNode *_field8;
    void *_field9;
    CDUnknownFunctionPointerType _field10;
};

struct _DDRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct _LibToAppTaskInfo {
    int _field1;
    _Bool _field2;
    void *_field3;
    int _field4;
};

struct _List_impl {
    struct _List_node_base _field1;
};

struct _List_node_base {
    struct _List_node_base *_field1;
    struct _List_node_base *_field2;
};

struct _NSRange {
    unsigned int location;
    unsigned int length;
};

struct _Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int>> {
    struct _Rb_tree_impl<std::less<int>, false> _field1;
};

struct _Rb_tree<int, std::pair<const int, std::vector<char, std::allocator<char>>>, std::_Select1st<std::pair<const int, std::vector<char, std::allocator<char>>>>, std::less<int>, std::allocator<std::pair<const int, std::vector<char, std::allocator<char>>>>> {
    struct _Rb_tree_impl<std::less<int>, false> _field1;
};

struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, std::basic_string<char>>, std::_Select1st<std::pair<const std::basic_string<char>, std::basic_string<char>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> {
    struct _Rb_tree_impl<std::less<std::basic_string<char>>, false> _field1;
};

struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, std::vector<char, std::allocator<char>>>, std::_Select1st<std::pair<const std::basic_string<char>, std::vector<char, std::allocator<char>>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::vector<char, std::allocator<char>>>>> {
    struct _Rb_tree_impl<std::less<std::basic_string<char>>, false> _field1;
};

struct _Rb_tree_impl<std::less<int>, false> {
    struct less<int> _field1;
    struct _Rb_tree_node_base _field2;
    unsigned int _field3;
};

struct _Rb_tree_impl<std::less<std::basic_string<char>>, false> {
    struct less<std::basic_string<char>> _field1;
    struct _Rb_tree_node_base _field2;
    unsigned int _field3;
};

struct _Rb_tree_node_base {
    int _field1;
    struct _Rb_tree_node_base *_field2;
    struct _Rb_tree_node_base *_field3;
    struct _Rb_tree_node_base *_field4;
};

struct _RecoverConfig {
    unsigned int _field1;
    _Bool _field2;
    unsigned int _field3;
    unsigned int _field4;
    _Bool _field5;
};

struct _TRSpeexEncodeContex {
    void *st;
    struct SpeexBits bits;
    int frame_size;
    struct PCMFifoBuffer *pFifo;
};

struct __sFILE {
    char *_field1;
    int _field2;
    int _field3;
    short _field4;
    short _field5;
    struct __sbuf _field6;
    int _field7;
    void *_field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    struct __sbuf _field13;
    struct __sFILEX *_field14;
    int _field15;
    unsigned char _field16[3];
    unsigned char _field17[1];
    struct __sbuf _field18;
    int _field19;
    long long _field20;
};

struct __sbuf {
    char *_field1;
    int _field2;
};

struct _opaque_pthread_cond_t {
    long __sig;
    char __opaque[24];
};

struct _opaque_pthread_mutex_t {
    long __sig;
    char __opaque[40];
};

struct _opaque_pthread_t {
    long _field1;
    struct __darwin_pthread_handler_rec *_field2;
    char _field3[4088];
};

struct _xmlAttr {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlAttr *_field7;
    struct _xmlAttr *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    int _field11;
    void *_field12;
};

struct _xmlDoc {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    int _field10;
    int _field11;
    struct _xmlDtd *_field12;
    struct _xmlDtd *_field13;
    struct _xmlNs *_field14;
    char *_field15;
    char *_field16;
    void *_field17;
    void *_field18;
    char *_field19;
    int _field20;
    struct _xmlDict *_field21;
    void *_field22;
    int _field23;
    int _field24;
};

struct _xmlDtd;

struct _xmlNode {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    char *_field11;
    struct _xmlAttr *_field12;
    struct _xmlNs *_field13;
    void *_field14;
    unsigned short _field15;
    unsigned short _field16;
};

struct _xmlNs {
    struct _xmlNs *_field1;
    int _field2;
    char *_field3;
    char *_field4;
    void *_field5;
    struct _xmlDoc *_field6;
};

struct basic_string<char, std::char_traits<char>, std::allocator<char>> {
    struct _Alloc_hider _field1;
};

struct bignum_st;

struct bn_blinding_st;

struct bn_mont_ctx_st;

struct crypto_ex_data_st {
    struct stack_st_void *_field1;
    int _field2;
};

struct engine_st;

struct in6_addr {
    union {
        unsigned char _field1[16];
        unsigned short _field2[8];
        unsigned int _field3[4];
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct internal_state;

struct less<int>;

struct less<std::basic_string<char>>;

struct list<wxvoice::SocketAsyncEventArgs *, std::allocator<wxvoice::SocketAsyncEventArgs *>> {
    struct _List_impl _field1;
};

struct map<int, std::vector<char, std::allocator<char>>, std::less<int>, std::allocator<std::pair<const int, std::vector<char, std::allocator<char>>>>> {
    struct _Rb_tree<int, std::pair<const int, std::vector<char, std::allocator<char>>>, std::_Select1st<std::pair<const int, std::vector<char, std::allocator<char>>>>, std::less<int>, std::allocator<std::pair<const int, std::vector<char, std::allocator<char>>>>> _field1;
};

struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> {
    struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, std::basic_string<char>>, std::_Select1st<std::pair<const std::basic_string<char>, std::basic_string<char>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field1;
};

struct map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::vector<char, std::allocator<char>>>>> {
    struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, std::vector<char, std::allocator<char>>>, std::_Select1st<std::pair<const std::basic_string<char>, std::vector<char, std::allocator<char>>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::vector<char, std::allocator<char>>>>> _field1;
};

struct rsa_meth_st;

struct rsa_st {
    int _field1;
    long _field2;
    struct rsa_meth_st *_field3;
    struct engine_st *_field4;
    struct bignum_st *_field5;
    struct bignum_st *_field6;
    struct bignum_st *_field7;
    struct bignum_st *_field8;
    struct bignum_st *_field9;
    struct bignum_st *_field10;
    struct bignum_st *_field11;
    struct bignum_st *_field12;
    struct crypto_ex_data_st _field13;
    int _field14;
    int _field15;
    struct bn_mont_ctx_st *_field16;
    struct bn_mont_ctx_st *_field17;
    struct bn_mont_ctx_st *_field18;
    char *_field19;
    struct bn_blinding_st *_field20;
    struct bn_blinding_st *_field21;
};

struct set<int, std::less<int>, std::allocator<int>> {
    struct _Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int>> _field1;
};

struct sockaddr {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[14];
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sockaddr_in6 {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned int _field4;
    struct in6_addr _field5;
    unsigned int _field6;
};

struct stack_st_void;

struct timeval {
    int tv_sec;
    int tv_usec;
};

struct tm {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    long _field10;
    char *_field11;
};

struct vector<CGPoint, std::allocator<CGPoint>> {
    struct _Vector_impl {
        struct CGPoint *_field1;
        struct CGPoint *_field2;
        struct CGPoint *_field3;
    } _field1;
};

struct vector<LogQueueElement, std::allocator<LogQueueElement>> {
    struct _Vector_impl {
        struct LogQueueElement *_field1;
        struct LogQueueElement *_field2;
        struct LogQueueElement *_field3;
    } _field1;
};

struct vector<char, std::allocator<char>> {
    struct _Vector_impl {
        char *_field1;
        char *_field2;
        char *_field3;
    } _field1;
};

struct vector<exceptionupload::AppInfo, std::allocator<exceptionupload::AppInfo>> {
    struct _Vector_impl {
        struct AppInfo *_field1;
        struct AppInfo *_field2;
        struct AppInfo *_field3;
    } _field1;
};

struct vector<exceptionupload::Attachment, std::allocator<exceptionupload::Attachment>> {
    struct _Vector_impl {
        struct Attachment *_field1;
        struct Attachment *_field2;
        struct Attachment *_field3;
    } _field1;
};

struct vector<exceptionupload::ExceptionUpload, std::allocator<exceptionupload::ExceptionUpload>> {
    struct _Vector_impl {
        struct ExceptionUpload *_field1;
        struct ExceptionUpload *_field2;
        struct ExceptionUpload *_field3;
    } _field1;
};

struct vector<exceptionupload::PlugInfo, std::allocator<exceptionupload::PlugInfo>> {
    struct _Vector_impl {
        struct PlugInfo *_field1;
        struct PlugInfo *_field2;
        struct PlugInfo *_field3;
    } _field1;
};

struct vector<short, std::allocator<short>> {
    struct _Vector_impl {
        short *_field1;
        short *_field2;
        short *_field3;
    } _field1;
};

struct vector<userinfo::SummaryInfo, std::allocator<userinfo::SummaryInfo>> {
    struct _Vector_impl {
        struct SummaryInfo *_field1;
        struct SummaryInfo *_field2;
        struct SummaryInfo *_field3;
    } _field1;
};

struct vector<wxvoice::SocketAsyncEventArgs *, std::allocator<wxvoice::SocketAsyncEventArgs *>> {
    struct _Vector_impl {
        struct SocketAsyncEventArgs **_field1;
        struct SocketAsyncEventArgs **_field2;
        struct SocketAsyncEventArgs **_field3;
    } _field1;
};

struct z_stream_s {
    char *next_in;
    unsigned int avail_in;
    unsigned int total_in;
    char *next_out;
    unsigned int avail_out;
    unsigned int total_out;
    char *msg;
    struct internal_state *state;
    CDUnknownFunctionPointerType zalloc;
    CDUnknownFunctionPointerType zfree;
    void *opaque;
    int data_type;
    unsigned int adler;
    unsigned int reserved;
};

#pragma mark Typedef'd Structures

typedef struct {
    _Bool bDeviceMotion;
    double yaw;
    double pitch;
    double roll;
    int screenOrientation;
    int trueSensorState;
    int nChangeTimes;
} CDStruct_6248f162;

typedef struct {
    unsigned long _field1;
    id *_field2;
    unsigned long *_field3;
    unsigned long _field4[5];
} CDStruct_11f37819;

typedef struct {
    unsigned short wCmd;
    unsigned short wSubCmd;
    short wRst;
    unsigned int dwUsed;
    unsigned int dwCalUsed;
    unsigned short wTry;
    unsigned char acHostName[32];
    unsigned char acHostIp[32];
    unsigned short wPort;
    unsigned char cConn;
    unsigned char cNetType;
    unsigned char cNetwork;
    unsigned char acErrorStr[64];
    unsigned short wSendDataLen;
    unsigned short wResvDataLen;
} CDStruct_34f44c17;

typedef struct {
    char acHostName[32];
    unsigned short wPort;
    unsigned short wTimeout;
} CDStruct_93d23b61;

typedef struct {
    void *_field1;
    unsigned short _field2;
} CDStruct_815e4876;

typedef struct {
    int version;
    void *info;
    CDUnknownFunctionPointerType retain;
    CDUnknownFunctionPointerType release;
    CDUnknownFunctionPointerType copyDescription;
} CDStruct_304912e7;

typedef struct {
    int downloadedNum;
    int remainNum;
    int open;
    int cmax;
    int gmax;
    int smax;
} CDStruct_939ea9c7;

typedef struct {
    int _field1;
    int _field2;
} CDStruct_1ef3fb1f;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    struct *_field1;
    unsigned int _field2;
    unsigned int _field3;
} CDStruct_e817f9f7;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    void *_field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    void *_field9;
    unsigned int _field10;
    char _field11[256];
    char _field12[64];
    CDStruct_939ea9c7 _field13;
    int _field14;
} CDStruct_7ebcfa3a;

typedef struct {
    struct AudioStreamBasicDescription dataFormat;
    struct OpaqueAudioQueue *queue;
    struct AudioQueueBuffer *buffers[3];
    unsigned int bufferByteSize;
    long long currentPacket;
    char recording;
} CDStruct_1406c672;

// Ambiguous groups
typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct {
    double latitude;
    double longitude;
} CDStruct_2c43369c;

typedef struct {
    double x;
    double y;
} CDStruct_34734122;

typedef struct {
    struct {
        double _field1;
        double _field2;
    } _field1;
    struct {
        double _field1;
        double _field2;
    } _field2;
} CDStruct_90e2a262;

typedef struct {
    CDStruct_2c43369c center;
    struct {
        double latitudeDelta;
        double longitudeDelta;
    } span;
} CDStruct_feeb6407;

typedef struct {
    CDStruct_34734122 origin;
    struct {
        double width;
        double height;
    } size;
} CDStruct_02837cd9;

typedef struct JceInputStream<analyticstaf::BufferReader> {
    char *_field1;
    unsigned int _field2;
    unsigned int _field3;
} JceInputStream_dae2ee3f;

typedef struct JceOutputStream<analyticstaf::BufferWriter> {
    char *_field1;
    unsigned int _field2;
    unsigned int _field3;
} JceOutputStream_6f42a06c;

typedef struct SmartPointer<EtchAsyncResult<EtchBool>> {
    struct EtchAsyncResult<EtchBool> *_field1;
    unsigned int *_field2;
} SmartPointer_2990cae4;

typedef struct SmartPointer<EtchAsyncResult<EtchHashTable<capu::SmartPointer<EtchObject>, capu::SmartPointer<EtchObject>, EtchComparator<capu::SmartPointer<EtchObject>>, EtchObjectHash>>> {
    struct EtchAsyncResult<EtchHashTable<capu::SmartPointer<EtchObject>, capu::SmartPointer<EtchObject>, EtchComparator<capu::SmartPointer<EtchObject>>, EtchObjectHash>> *_field1;
    unsigned int *_field2;
} SmartPointer_eeb2e2f7;

typedef struct SmartPointer<EtchAsyncResult<EtchInt32>> {
    struct EtchAsyncResult<EtchInt32> *_field1;
    unsigned int *_field2;
} SmartPointer_b24293cc;

typedef struct SmartPointer<EtchAsyncResult<EtchNativeArray<signed char>>> {
    struct EtchAsyncResult<EtchNativeArray<signed char>> *_field1;
    unsigned int *_field2;
} SmartPointer_9495c61d;

typedef struct SmartPointer<EtchAsyncResult<EtchObject>> {
    struct EtchAsyncResult<EtchObject> *_field1;
    unsigned int *_field2;
} SmartPointer_e48105ec;

typedef struct SmartPointer<EtchAsyncResult<EtchString>> {
    struct EtchAsyncResult<EtchString> *_field1;
    unsigned int *_field2;
} SmartPointer_e050184f;

typedef struct SmartPointer<EtchAsyncResult<de_bmw_idrive_BMWRemoting::BMWRemoting::VersionInfo>> {
    struct EtchAsyncResult<de_bmw_idrive_BMWRemoting::BMWRemoting::VersionInfo> *_field1;
    unsigned int *_field2;
} SmartPointer_40adefbb;

typedef struct SmartPointer<EtchAsyncResultNone> {
    struct EtchAsyncResultNone *_field1;
    unsigned int *_field2;
} SmartPointer_e248625f;

typedef struct SmartPointer<EtchBool> {
    struct EtchBool *_field1;
    unsigned int *_field2;
} SmartPointer_41e81a6d;

typedef struct SmartPointer<EtchByte> {
    struct EtchByte *_field1;
    unsigned int *_field2;
} SmartPointer_3d2ef9e4;

typedef struct SmartPointer<EtchException> {
    struct EtchException *_field1;
    unsigned int *_field2;
} SmartPointer_749f70b3;

typedef struct SmartPointer<EtchHashTable<capu::SmartPointer<EtchObject>, capu::SmartPointer<EtchObject>, EtchComparator<capu::SmartPointer<EtchObject>>, EtchObjectHash>> {
    struct EtchHashTable<capu::SmartPointer<EtchObject>, capu::SmartPointer<EtchObject>, EtchComparator<capu::SmartPointer<EtchObject>>, EtchObjectHash> *_field1;
    unsigned int *_field2;
} SmartPointer_0ad8884d;

typedef struct SmartPointer<EtchInt32> {
    struct EtchInt32 *_field1;
    unsigned int *_field2;
} SmartPointer_327c0c77;

typedef struct SmartPointer<EtchNativeArray<capu::SmartPointer<EtchObject>>> {
    struct EtchNativeArray<capu::SmartPointer<EtchObject>> *_field1;
    unsigned int *_field2;
} SmartPointer_486f98c6;

typedef struct SmartPointer<EtchNativeArray<signed char>> {
    struct EtchNativeArray<signed char> *_field1;
    unsigned int *_field2;
} SmartPointer_5942b2ab;

typedef struct SmartPointer<EtchObject> {
    struct EtchObject *_field1;
    unsigned int *_field2;
} SmartPointer_19daed9d;

typedef struct SmartPointer<EtchShort> {
    struct EtchShort *_field1;
    unsigned int *_field2;
} SmartPointer_2cdceac8;

typedef struct SmartPointer<EtchString> {
    struct EtchString *_field1;
    unsigned int *_field2;
} SmartPointer_d4feb5b0;

typedef struct SmartPointer<de_bmw_idrive_BMWRemoting::AVConnectionType> {
    struct AVConnectionType *_field1;
    unsigned int *_field2;
} SmartPointer_8066eb6b;

typedef struct SmartPointer<de_bmw_idrive_BMWRemoting::AVPlayerState> {
    struct AVPlayerState *_field1;
    unsigned int *_field2;
} SmartPointer_d6a6d25b;

typedef struct SmartPointer<de_bmw_idrive_BMWRemoting::BMWRemoting::RHMIMetaData> {
    struct RHMIMetaData *_field1;
    unsigned int *_field2;
} SmartPointer_1a0550cc;

typedef struct SmartPointer<de_bmw_idrive_BMWRemoting::BMWRemoting::VersionInfo> {
    struct VersionInfo *_field1;
    unsigned int *_field2;
} SmartPointer_3dbef9e5;

typedef struct SmartPointer<de_bmw_idrive_BMWRemoting::LogLevel> {
    struct LogLevel *_field1;
    unsigned int *_field2;
} SmartPointer_cba8b065;

typedef struct SmartPointer<de_bmw_idrive_BMWRemoting::MapMode> {
    struct MapMode *_field1;
    unsigned int *_field2;
} SmartPointer_37069ba5;

typedef struct SmartPointer<de_bmw_idrive_BMWRemoting::RHMIResourceType> {
    struct RHMIResourceType *_field1;
    unsigned int *_field2;
} SmartPointer_8b0a02aa;

typedef struct SmartPointer<de_bmw_idrive_BMWRemoting::VoicePriorityType> {
    struct VoicePriorityType *_field1;
    unsigned int *_field2;
} SmartPointer_a7691bac;

typedef struct vector<CGPoint, std::allocator<CGPoint>> {
    struct _Vector_impl {
        struct CGPoint *_field1;
        struct CGPoint *_field2;
        struct CGPoint *_field3;
    } _field1;
} vector_2995ee75;

typedef struct vector<LogQueueElement, std::allocator<LogQueueElement>> {
    struct _Vector_impl {
        struct LogQueueElement *_field1;
        struct LogQueueElement *_field2;
        struct LogQueueElement *_field3;
    } _field1;
} vector_8f9e92da;

typedef struct vector<short, std::allocator<short>> {
    struct _Vector_impl {
        short *_field1;
        short *_field2;
        short *_field3;
    } _field1;
} vector_df58a32d;

