//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class AudioDataBase, SingleHourglass, SongInfo, StatInfo;

__attribute__((visibility("hidden")))
@interface AudioPlayerBase : NSObject
{
    int playState;
    NSObject *stateLock;
    double duration;
    NSObject *durationLock;
    int err;
    BOOL isPause;
    BOOL bErrCasedByDataSource;
    AudioDataBase *dataSource;
    NSObject *dataSourceLock;
    SingleHourglass *hourglass;
    StatInfo *statInfo;
    int playType;
    long preparingCostTime;
    SongInfo *song;
    unsigned long iBufferTimesCount;
    unsigned long iSecondBufferDuration;
    int _errorCode;
    int _lastPlayState;
    int _secondCacheCount;
    SingleHourglass *_firstBufferHourglass;
    SingleHourglass *_playingHourglass;
    SingleHourglass *_bufferingHourglass;
}

@property(retain) SingleHourglass *bufferingHourglass; // @synthesize bufferingHourglass=_bufferingHourglass;
@property(retain) SingleHourglass *playingHourglass; // @synthesize playingHourglass=_playingHourglass;
@property(retain) SingleHourglass *firstBufferHourglass; // @synthesize firstBufferHourglass=_firstBufferHourglass;
@property int secondCacheCount; // @synthesize secondCacheCount=_secondCacheCount;
@property int lastPlayState; // @synthesize lastPlayState=_lastPlayState;
@property int errorCode; // @synthesize errorCode=_errorCode;
@property BOOL isPause; // @synthesize isPause;
@property unsigned long iSecondBufferDuration; // @synthesize iSecondBufferDuration;
@property unsigned long iBufferTimesCount; // @synthesize iBufferTimesCount;
@property(retain) SongInfo *song; // @synthesize song;
@property long preparingCostTime; // @synthesize preparingCostTime;
@property int playType; // @synthesize playType;
@property(retain, nonatomic) StatInfo *statInfo; // @synthesize statInfo;
@property(retain) AudioDataBase *dataSource; // @synthesize dataSource;
@property BOOL bErrCasedByDataSource; // @synthesize bErrCasedByDataSource;
- (void).cxx_destruct;
- (float)playedTime;
- (void)fadeAudioQueueWithDuration:(double)arg1;
- (void)_checkStatinfoContainBadData;
- (void)statFirstBufferTime;
- (void)setEffect:(int)arg1 withParam:(int)arg2;
@property double duration; // @synthesize duration;
@property(readonly) BOOL isSeeking;
- (double)startPercent;
@property(readonly) double loadingPercent;
@property(readonly) double currentBufferPercent;
@property(readonly) double progress;
@property int playState; // @synthesize playState;
@property int err; // @synthesize err;
- (BOOL)isErr;
- (void)mainThreadStateNotification:(id)arg1;
- (void)setSeekTime:(double)arg1;
- (void)destroy;
- (void)stop;
- (void)resume;
- (void)pauseImmediately:(BOOL)arg1;
- (void)pause;
- (void)play;
- (BOOL)prepareWithDataSource:(id)arg1;
- (id)init;

@end

