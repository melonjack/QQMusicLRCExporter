//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "UIViewController.h"

#import "BEActionSheetDelegate.h"
#import "ChannelAlertViewDelegate.h"
#import "ListTagDelegate.h"
#import "QMTableViewProtocol.h"
#import "SongCellDelegate.h"
#import "UIAlertViewDelegate.h"
#import "UIGestureRecognizerDelegate.h"
#import "UIScrollViewDelegate.h"
#import "UITableViewDataSource.h"
#import "UITableViewDelegate.h"

@class BETouchView, CRNavigationBar, IndexView, InputFolderName, ListBase, ListTag, NSArray, NSIndexPath, NSMutableArray, NSString, NSTimer, NavBarTitleLabel, NowPlayingAnimationView, SongInfo, UIAlertView, UIAlertViewWithUserInfo, UIBlockAlertView, UIButton, UIImageView, UITableView, UIView;

__attribute__((visibility("hidden")))
@interface SkinViewController : UIViewController <ChannelAlertViewDelegate, ListTagDelegate, UITableViewDelegate, UIScrollViewDelegate, BEActionSheetDelegate, UITableViewDataSource, QMTableViewProtocol, UIAlertViewDelegate, UIGestureRecognizerDelegate, SongCellDelegate>
{
    ListTag *listTag;
    BOOL bPlayingUIPush;
    unsigned long _uin;
    int _actionSheet_download_all;
    int _actionSheet_addToPlaying_index;
    int _actionSheet_addTo_index;
    int _actionSheet_download_index;
    int _actionSheet_share_index;
    int _actionSheet_toMv_index;
    int _actionSheet_SingerInfo_index;
    int _actionSheet_albumInfo_index;
    int _actionSheet_delete_index;
    int _actionSheet_ksong_index;
    UITableView *songsTableView;
    UITableView *cluserTableView;
    UIView *infoView;
    BETouchView *nonetView;
    UIView *emptyView;
    UIView *pageHeaderView;
    UIView *bannerTipsContainerView;
    UIButton *btnPlay;
    NowPlayingAnimationView *playingAnimationView;
    NavBarTitleLabel *navTitleLabel;
    UIImageView *topBackImageView;
    CRNavigationBar *topBar;
    id selectedObject;
    NSMutableArray *modySongs;
    BOOL bDisplayTabBar;
    BOOL statusBarFrameIsChanging;
    BOOL bContainSongList;
    IndexView *_indexView;
    int statusBarOffset;
    BOOL _titleLabelIsAnimated;
    struct CGRect _originNavTitleLabelFrame;
    BOOL _canBack;
    UIBlockAlertView *_cellLongPressAlertView;
    BOOL isModalView;
    BOOL animateShow;
    BOOL isMVButtonStyle;
    BOOL isManualScolling;
    BOOL _delayCallPlayingListIndexChange;
    BOOL _bContinueShowBannerTips;
    BOOL _bShowSaveFinishIcoInCell;
    BOOL _isRandomBtnPreesed;
    int tabBarDisplayMode;
    UIView *tabBarObserverd;
    SongInfo *circleJumpSong;
    UIView *_bgView;
    int _eMiniPlayerDisplayMode;
    InputFolderName *_inputFolderName;
    UIAlertView *_songLimitAlertView;
    UIAlertViewWithUserInfo *_openOfflineAlertView;
    UIImageView *_imageViewChecked;
    SongInfo *_circleJumpSongInfo;
    NSMutableArray *_notifycationAliveWithSelf;
    NSMutableArray *_notifycationAliveWithView;
    NSIndexPath *_lastHilightedIndexPath;
    NSTimer *_viewDidPopTimer;
}

+ (void)addSeprateLineFrameToView:(id)arg1;
+ (id)addSeprateLineToBottom:(id)arg1;
+ (id)addSeprateLineToTop:(id)arg1;
+ (id)createSeprateLine;
+ (float)seprateLineHeight;
+ (void)restoreStatusBarStyle;
+ (void)jumpToDirect:(id)arg1 nav:(id)arg2 fromVC:(id)arg3 fromSmart:(BOOL)arg4;
+ (id)createOperateViewByMode:(int)arg1 actions:(int)arg2 playBlock:(CDUnknownBlockType)arg3 operBlock:(CDUnknownBlockType)arg4;
+ (id)createNavBarStyleBtnWithTitle:(id)arg1 target:(id)arg2 selector:(SEL)arg3;
+ (id)createCancelHeaderBtn:(id)arg1;
+ (id)createFinishHeaderBtn:(id)arg1;
+ (id)addArrowToCell:(id)arg1 inTable:(id)arg2 indexPath:(id)arg3;
+ (id)createArrowImageView;
+ (void)addSeprateLineToCell:(id)arg1 inTable:(id)arg2 indexPath:(id)arg3 cellType:(int)arg4;
+ (void)addSeprateLineToCell:(id)arg1 inTable:(id)arg2 indexPath:(id)arg3;
+ (float)cellHeightForTable:(id)arg1 indexPath:(id)arg2;
+ (struct SLineIndent)_indentSeprateLineForRow:(unsigned int)arg1 rowCount:(unsigned int)arg2 cellType:(int)arg3;
+ (float)indentByCellType:(int)arg1;
+ (void)showAddToDownloadSuccessBannerTips:(int)arg1;
+ (BOOL)_containArrowInCell:(id)arg1;
+ (id)reusableCell:(Class)arg1 tableView:(id)arg2 indexPath:(id)arg3 identifier:(id)arg4;
+ (void)showBannerTips:(id)arg1 WithIcon:(int)arg2;
@property BOOL isRandomBtnPreesed; // @synthesize isRandomBtnPreesed=_isRandomBtnPreesed;
@property(retain) NSTimer *viewDidPopTimer; // @synthesize viewDidPopTimer=_viewDidPopTimer;
@property(retain, nonatomic) NSIndexPath *lastHilightedIndexPath; // @synthesize lastHilightedIndexPath=_lastHilightedIndexPath;
@property(retain, nonatomic) NSMutableArray *notifycationAliveWithView; // @synthesize notifycationAliveWithView=_notifycationAliveWithView;
@property(retain, nonatomic) NSMutableArray *notifycationAliveWithSelf; // @synthesize notifycationAliveWithSelf=_notifycationAliveWithSelf;
@property(retain, nonatomic) SongInfo *circleJumpSongInfo; // @synthesize circleJumpSongInfo=_circleJumpSongInfo;
@property(nonatomic) BOOL bShowSaveFinishIcoInCell; // @synthesize bShowSaveFinishIcoInCell=_bShowSaveFinishIcoInCell;
@property(nonatomic) BOOL bContinueShowBannerTips; // @synthesize bContinueShowBannerTips=_bContinueShowBannerTips;
@property(nonatomic) BOOL delayCallPlayingListIndexChange; // @synthesize delayCallPlayingListIndexChange=_delayCallPlayingListIndexChange;
@property(retain, nonatomic) UIImageView *imageViewChecked; // @synthesize imageViewChecked=_imageViewChecked;
@property(retain, nonatomic) UIAlertViewWithUserInfo *openOfflineAlertView; // @synthesize openOfflineAlertView=_openOfflineAlertView;
@property(retain, nonatomic) UIAlertView *songLimitAlertView; // @synthesize songLimitAlertView=_songLimitAlertView;
@property(retain, nonatomic) InputFolderName *inputFolderName; // @synthesize inputFolderName=_inputFolderName;
@property int eMiniPlayerDisplayMode; // @synthesize eMiniPlayerDisplayMode=_eMiniPlayerDisplayMode;
@property(retain, nonatomic) UIView *bgView; // @synthesize bgView=_bgView;
@property(nonatomic) BOOL isManualScolling; // @synthesize isManualScolling;
@property(retain, nonatomic) SongInfo *circleJumpSong; // @synthesize circleJumpSong;
@property BOOL isMVButtonStyle; // @synthesize isMVButtonStyle;
@property(nonatomic) BOOL animateShow; // @synthesize animateShow;
@property(nonatomic) BOOL isModalView; // @synthesize isModalView;
@property(nonatomic) int statusBarOffset; // @synthesize statusBarOffset;
@property(readonly, nonatomic) IndexView *indexView; // @synthesize indexView=_indexView;
@property(nonatomic) BOOL bContainSongList; // @synthesize bContainSongList;
@property(retain, nonatomic) UIView *tabBarObserverd; // @synthesize tabBarObserverd;
@property(nonatomic) BOOL bDisplayTabBar; // @synthesize bDisplayTabBar;
@property(nonatomic) int tabBarDisplayMode; // @synthesize tabBarDisplayMode;
@property(nonatomic) BOOL bPlayingUIPush; // @synthesize bPlayingUIPush;
@property(retain, nonatomic) UIView *bannerTipsContainerView; // @synthesize bannerTipsContainerView;
@property(retain, nonatomic) UIView *pageHeaderView; // @synthesize pageHeaderView;
@property(retain, nonatomic) CRNavigationBar *topBar; // @synthesize topBar;
@property(retain, nonatomic) UIImageView *topBackImageView; // @synthesize topBackImageView;
@property(retain, nonatomic) NowPlayingAnimationView *playingAnimationView; // @synthesize playingAnimationView;
@property(retain, nonatomic) UIButton *btnPlay; // @synthesize btnPlay;
@property(retain, nonatomic) UIView *emptyView; // @synthesize emptyView;
@property(retain, nonatomic) UITableView *cluserTableView; // @synthesize cluserTableView;
@property(retain, nonatomic) NSMutableArray *modySongs; // @synthesize modySongs;
@property(retain, nonatomic) NavBarTitleLabel *navTitleLabel; // @synthesize navTitleLabel;
@property(retain, nonatomic) id selectedObject; // @synthesize selectedObject;
@property(retain, nonatomic) UIView *nonetView; // @synthesize nonetView;
@property(retain, nonatomic) UIView *infoView; // @synthesize infoView;
@property(retain, nonatomic) UITableView *songsTableView; // @synthesize songsTableView;
- (void).cxx_destruct;
- (void)delayDeselectRow;
- (void)reloadTable:(id)arg1 indexPath:(id)arg2;
- (void)postNotityUIReady:(BOOL)arg1;
- (BOOL)gestureRecognizerShouldBegin:(id)arg1;
- (BOOL)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)hideNavBarBg;
- (float)getSeperateLineWidth;
- (int)statusBarStyle;
- (BOOL)canBack;
- (float)emptyViewTopOffset;
- (float)infoViewTopOffset;
- (void)doneAfterDismissMe;
- (BOOL)dismissMeWhenOnBackground;
- (void)captureAfter;
- (void)captureBefore;
- (void)removeNotification:(id)arg1 selector:(id)arg2;
- (void)addNotification:(id)arg1 selector:(SEL)arg2;
- (void)showCanNotPlayMVAlert;
- (struct CGRect)getContextFrame;
- (int)getPlayingIndexIfPlayingCurrentList:(int)arg1;
- (void)_resetStatusBarStyle;
- (void)resetStatusBarStyle;
- (void)statusBarFrameDidChange:(id)arg1;
- (void)_statusBarFrameDidChange:(id)arg1;
- (void)_statusBarFrameWillChange:(id)arg1;
- (void)presentIAPPurchaseViewFromVC:(id)arg1 source:(id)arg2 aid:(id)arg3;
- (void)presentIAPPurchaseViewFromVC:(id)arg1;
- (void)doHandlePushComming:(id)arg1;
- (BOOL)enableShake;
- (void)onColorStyleChanged;
- (void)_onNotifyColorStyleChanged:(id)arg1;
- (void)_onNotifySongEntityFileChanged:(id)arg1;
- (void)updateGreenDiamond;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(int)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (int)tableView:(id)arg1 numberOfRowsInSection:(int)arg2;
- (void)tableView:(id)arg1 didUnhighlightRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didHighlightRowAtIndexPath:(id)arg2;
- (id)_nextCellInTable:(id)arg1 currentIndexPath:(id)arg2;
- (void)animate:(id)arg1 section:(unsigned int)arg2 compareResult:(struct SCompareResult)arg3;
- (id)makeIndexPathArray:(unsigned int)arg1 length:(unsigned int)arg2 section:(unsigned int)arg3;
- (void)cancel:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)popGestureRecognize;
- (void)reachabilityChanged:(id)arg1;
- (void)viewDidLoad;
- (BOOL)isNeedAddBottomLine;
- (void)setNavTitle:(id)arg1;
- (void)recoverGestureState;
- (void)viewDidDisappear:(BOOL)arg1;
- (void)viewWillDisappear:(BOOL)arg1;
- (void)longPressBack:(id)arg1;
- (void)back:(id)arg1;
- (void)freshByPopTag;
- (void)nowPlayingButtonPressed:(id)arg1;
@property(readonly, nonatomic) int contextHight;
@property(readonly, nonatomic) int headerHight;
- (void)reFreshWithNetworkDetection;
- (void)reFresh;
- (void)onList:(id)arg1 ChangeByType:(int)arg2 Index:(int)arg3 Info:(id)arg4;
- (void)onList:(id)arg1 InfoChangeByInfo:(id)arg2 ChangeType:(int)arg3 Index:(unsigned int)arg4;
- (void)onNotifyPlayingSongChange:(id)arg1;
- (void)showSongDisableMessage:(id)arg1;
- (void)showNoWifiTip:(id)arg1;
- (void)fillCell:(id)arg1 WithList:(id)arg2 Index:(int)arg3 OnlyShowSinger:(BOOL)arg4;
- (void)fillCell:(id)arg1 WithList:(id)arg2 Index:(int)arg3;
- (BOOL)playList:(id)arg1 ItemClicked:(int)arg2 listPlayMode:(int)arg3 isNeedToResetNavBar:(BOOL)arg4;
- (BOOL)playList:(id)arg1 ItemClicked:(int)arg2 listPlayMode:(int)arg3;
- (void)randomButtonClicked:(id)arg1;
@property(readonly, nonatomic) __weak NSArray *listData;
@property(readonly, nonatomic) __weak ListBase *list;
@property(readonly, nonatomic) __weak NSArray *allSongs;
- (void)delListTag;
- (void)addListTag:(int)arg1;
- (id)getAllVCType;
- (id)strVCtype;
@property(readonly, nonatomic) int vcType;
- (void)touchOnTop;
- (id)getCurrentNavigationController;
- (void)dealloc;
- (void)deleleAllListTag;
- (void)didReceiveMemoryWarning;
- (void)recheckTabBarDisplayMode;
- (void)recheckStatusBarMode;
- (void)viewDidPop;
- (void)viewWillPop;
- (void)viewDidAppear:(BOOL)arg1;
- (void)viewWillAppear:(BOOL)arg1;
- (void)contentAreaHeightDidChanged:(float)arg1;
- (float)getMiniPlayerHeight;
- (void)miniPlayerViewDidChanged:(float)arg1;
- (void)hiddenMiniBar:(id)arg1;
- (void)showMiniBar:(id)arg1;
- (id)getBgName;
- (void)loadView;
- (BOOL)useBgImage;
@property(readonly, nonatomic) BOOL mody;
- (id)init;
- (void)navigateToAlbumInfo:(id)arg1;
- (void)navigateToDissInfo:(id)arg1;
- (void)navigateToForMeData:(id)arg1;
- (void)navigateToForMeLink:(id)arg1;
- (void)index_scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)index_scrollViewDidEndDecelerating:(id)arg1;
- (void)index_scrollViewWillBeginDecelerating:(id)arg1;
- (void)index_scrollViewDidEndDragging:(id)arg1 willDecelerate:(BOOL)arg2;
- (void)index_scrollViewWillBeginDragging:(id)arg1;
- (void)index_scrollViewDidScroll:(id)arg1;
- (void)delayCallTouchUpInside:(id)arg1;
- (void)onIndexTouchupInside:(struct CGPoint)arg1;
- (void)onIndexChanged:(id)arg1;
- (float)customIndexViewY;
- (void)createIndexView;
- (void)onTouchUpInsideMore:(id)arg1;
- (id)createMoreHeaderBtn;
- (id)createClearInputButton;
- (void)freshTopBgView;
- (void)freshReturnButton;
- (void)freshNowPlayingButton;
- (id)createNavBarStyleBtnWithTitle:(id)arg1 selector:(SEL)arg2;
- (id)createRightButtonWithImage:(id)arg1 highlightImageName:(id)arg2 selector:(SEL)arg3;
- (id)createCloseHeaderBtn;
- (id)createCancelHeaderBtn;
- (id)createFinishHeaderBtn;
- (id)createShareHeaderBtn;
- (id)createEditHeaderBtn;
- (id)createGeneralBtnWithTitle:(id)arg1 selector:(SEL)arg2;
- (void)headerCancel:(id)arg1;
- (void)headerEdit:(id)arg1;
- (void)headerFinish:(id)arg1;
- (id)createNowPlayingBtn;
- (id)getBackImageSelectName;
- (id)getBackImageName;
- (id)createRetunBtnAutoAndCloseBt:(BOOL)arg1 closeSelector:(SEL)arg2;
- (id)createRetunBtnAuto:(BOOL)arg1;
- (void)createHeaderWithBg:(BOOL)arg1 LeftView:(id)arg2 HeaderText:(BOOL)arg3 RightView:(id)arg4;
- (void)createWebViewHeaerWithCloseBtInLeft:(SEL)arg1;
- (void)createHeaderWithLeftView:(id)arg1 HeaderText:(BOOL)arg2 RightView:(id)arg3;
- (void)createHeaderWithReturnBtn:(BOOL)arg1 HeaderText:(BOOL)arg2 PlayBtn:(BOOL)arg3;
- (void)createDefaultHeader;
- (void)updateComRootCellNumber:(id)arg1 folderInfo:(id)arg2 cellFrom:(int)arg3;
- (id)getSubTitleInfoWithFolder:(id)arg1 withPart1:(id)arg2;
- (void)fillComRootMyMusicCell:(id)arg1 indexPath:(id)arg2 folderInfo:(id)arg3 cellFrom:(int)arg4;
- (id)imageCell:(id)arg1 RowAtIndexPath:(id)arg2 identifier:(id)arg3;
- (id)addFootView:(id)arg1;
- (id)addHeaderView:(id)arg1;
- (void)newPlainTable;
- (void)newTable;
- (void)handleCellLongPress:(id)arg1;
- (BOOL)canResponseLongPress;
- (void)showPiLiangOperationAlert;
- (void)cellLongPressShowAlert;
- (BOOL)isShowActionBarDelButton;
- (void)_deleteSongsFromAllMusicExpertTaoSong:(id)arg1;
- (void)_deleteSongsFromeFolder:(id)arg1 songInfo:(id)arg2;
- (void)deleteSongsFromAllMusic:(id)arg1;
- (void)showOpenAutoSaveAlert;
- (BOOL)isPlayEnableNowForSong:(id)arg1;
- (void)showFrostedGlassTroundAround;
- (void)hideFrostedGlassTroundAround;
- (void)newTableCanLoadingMore;
- (void)newSongTable;
- (BOOL)wantPlayAtIndexPath:(id)arg1 tableView:(id)arg2;
- (void)showKSongAction:(id)arg1;
- (void)delObject:(id)arg1;
- (void)showFloderSongList:(id)arg1;
- (void)showAlbumInfo:(id)arg1 fromVC:(id)arg2;
- (void)showSingerInfo:(id)arg1;
- (void)showMv:(id)arg1;
- (void)addToSong:(id)arg1;
- (void)reqSong:(id)arg1;
- (void)downloadSQSong:(id)arg1;
- (void)downloadHQSong:(id)arg1;
- (void)refreshChinaUnicomCell;
- (void)downloadSong:(id)arg1;
- (void)showExclusiveActionSheet:(id)arg1;
- (id)actionSheetWithButtons:(id)arg1 confirmButtons:(id)arg2 exclusiveLimit:(CDStruct_939ea9c7)arg3 song:(id)arg4;
- (id)createFreePackItemDicInDownloadSheet;
- (void)downloadSongAfterLoginFailed:(id)arg1;
- (void)downloadSongAfterLoginSuccess:(id)arg1;
- (void)downloadSQSongAfterLoginSuccess:(id)arg1;
- (void)downloadHQSongAfterLoginSuccess:(id)arg1;
- (void)navigateToGreenDiamond:(id)arg1;
- (void)loginSucess:(id)arg1;
- (void)addTrendAroundActionSheetClickStat:(int)arg1;
- (void)actionSheet:(id)arg1 actionSheetButtonClickedAtIndex:(int)arg2;
- (void)sqLevelLoginOK:(id)arg1;
- (void)highLevelLoginOK:(id)arg1;
- (void)showHighDownloadPrompt;
- (void)updateGreenDiamond;
- (BOOL)actionSheet:(id)arg1 choiceButtonClickedWithChoiceValue:(id)arg2;
- (void)actionSheetChoiceButtonClick:(BOOL)arg1;
- (void)filterLastSongs:(id)arg1 quality:(int)arg2 result:(CDUnknownBlockType)arg3;
- (void)addSongsToDownloadList:(id)arg1;
- (void)actionSheet:(id)arg1 confirmButtonClickedWithChoiceValue:(id)arg2 identifier:(id)arg3;
- (void)showUnAddedExclusiveSongAlert:(id)arg1;
- (id)getDisableActionTitle:(id)arg1;
- (BOOL)hasDisabledAction:(id)arg1;
- (void)newActionSheetWithSongInfo:(id)arg1;
- (void)newActionSheet:(id)arg1;
- (void)newMvActionSheet:(id)arg1;
- (BOOL)enableKSongActionSheet:(id)arg1;
- (BOOL)enableDelActionSheet:(id)arg1;
- (BOOL)showKSongBtnInActionSheet:(id)arg1;
- (BOOL)showDelBtnInActionSheet:(id)arg1;
- (BOOL)showAlbumInfoBtnInActionSheet:(id)arg1;
- (BOOL)showSingerInfoBtnInActionSheet:(id)arg1;
- (id)getSongInfoByObject:(id)arg1;
- (void)autoRandomButton;
- (void)removeRandomButtonInHeader:(id)arg1;
- (void)addRandomButtonInHeader:(id)arg1;
- (id)createRandomButton;
- (void)resetButtonInset:(id)arg1;
- (void)changeDownAllViewFrame:(BOOL)arg1;
- (id)fillSongCell:(id)arg1 indexPath:(id)arg2;
- (BOOL)_containArrowInCell:(id)arg1;
- (id)reusableCell:(Class)arg1 tableView:(id)arg2 indexPath:(id)arg3 identifier:(id)arg4;
- (id)mvCell:(id)arg1 RowAtIndexPath:(id)arg2 hasTwoSubtitle:(BOOL)arg3 identifier:(id)arg4;
- (Class)getSongCellClassByIndexpath:(id)arg1;
- (id)getSongInfoAtIndexPath:(id)arg1;
- (void)fillCell:(id)arg1 WithSong:(id)arg2;
- (void)batchAddSongs:(id)arg1;
- (void)setRedPointStyle:(id)arg1 withCellHeight:(float)arg2 withLabel:(id)arg3;
- (void)setLabelOriginY:(id)arg1 withCellHeight:(float)arg2;
- (void)setCellRightLabelStyle:(id)arg1 withCellHeight:(float)arg2;
- (void)setCellRightLabelStyle:(id)arg1;
- (void)showWXMissView:(int)arg1;
- (void)setTableViewFooterTextStyle:(id)arg1;
- (void)setTableViewHeaderTextStyle:(id)arg1;
- (id)setTableViewHeaderTitle:(id)arg1;
- (id)moreRootSwitchCellRowForTableView:(id)arg1 AtIndexPath:(id)arg2;
- (id)moreRootCellRowForTableView:(id)arg1 AtIndexPath:(id)arg2;
- (void)hideNonStoppedBannerTips;
- (void)showNonStoppedBannerTips:(id)arg1 WithIcon:(int)arg2;
- (void)dismissMsgView:(id)arg1;
- (void)showComMsgBoxWithMsg:(id)arg1 ArrowLoction:(struct CGPoint)arg2;
- (void)hideNetErrView;
- (void)showNoNetViewWithInfo1:(id)arg1 andInfo2:(id)arg2 iconName:(id)arg3;
- (void)showNetErrView;
- (void)showNetErrWithResult:(int)arg1;
- (void)hideLoadingView;
- (id)loadingViewText;
- (void)showAllTypeLoadingView:(BOOL)arg1 height:(float)arg2;
- (void)adjustPositionToFit:(id)arg1;
- (void)showCustomLoadingViewWithHeight:(float)arg1;
- (void)showLoadingView;
- (BOOL)isBannerTipsShow;
- (void)finishedTips;
- (void)dismissTipsWithAnimated:(BOOL)arg1;
- (void)dismissTips;
- (void)changeTipsEnable;
- (void)hideBannerTipsImmedirtery;
- (void)hideBannerTips;
- (void)showBannerTips:(id)arg1 WithIcon:(int)arg2 Force:(BOOL)arg3;
- (void)showBannerTips:(id)arg1 WithIcon:(int)arg2 withTipsType:(int)arg3 withForceClearQueue:(BOOL)arg4;
- (void)showBannerTips:(id)arg1 WithIcon:(int)arg2;
- (void)showBannerTips:(id)arg1 WithIcon:(int)arg2 withActionTitle:(id)arg3 withEventBlock:(CDUnknownBlockType)arg4;
- (void)showChannelBannerTips:(id)arg1 WithIcon:(int)arg2 Force:(BOOL)arg3;
- (void)showChannelBannerTips:(id)arg1 WithIcon:(int)arg2;
- (id)createNewBannerTips:(id)arg1 WithIcon:(int)arg2;
- (id)createIcon:(int)arg1;
- (BOOL)showContinuousBannerTips;
- (void)freshAllExceptionView;
- (void)hideAll;
- (void)showTable;
- (void)fresh:(id)arg1;
- (void)addEmptyView:(id)arg1;
- (id)emptyViewText;
- (void)showEmptyView;
- (id)createEmptyViewButton:(id)arg1 sel:(SEL)arg2;
- (id)emptyViewCustomButton;
- (id)emptyViewBgText2;
- (id)emptyViewBgText;
- (id)emptyViewBgImage;
- (void)showOfflineFuncPrivilegeWebPage:(id)arg1 callbackSelector:(SEL)arg2 alert:(BOOL)arg3;
- (void)_onCollectSuccess:(id)arg1;
- (void)_showMessageWhileDone:(id)arg1;
- (void)reportLoveSong:(id)arg1;
- (id)_formatAddSongsToFolderMsgWithErrorCollectType:(int)arg1 collectInfo:(id)arg2 folderId:(int)arg3 iconType:(int *)arg4;
- (void)_showInputFolderName:(id)arg1;
- (void)_showSelectFolder:(id)arg1;
- (void)onNotifyCollectEdit:(id)arg1;
- (void)onNotifySyncFolderAddFinish:(id)arg1;
- (void)collectSelected:(id)arg1;
- (void)addSongsToCollect:(id)arg1;
- (void)onTouchSelectAll:(id)arg1;
- (unsigned int)getEditingSongsCount;
- (void)onTouchUpInsideDoneEdit:(id)arg1;
- (id)createDoneEditView;
- (id)createSelectAllView;
- (id)createFootEditBarWithDeleteBtnShow:(BOOL)arg1 isFromIpodVC:(BOOL)arg2 isNotShowDownloadBtn:(BOOL)arg3;
- (void)onTouchUpInsideEdit:(id)arg1;
- (id)createEditView;
- (id)createEditViewByButtonItems:(id)arg1 streachButton:(BOOL)arg2;
- (void)navigateToMyCircle:(unsigned long)arg1;
- (void)navigateToShareTimeline:(unsigned long)arg1;
- (void)_animateTitleBackFromNavBarWithAnimate:(BOOL)arg1;
- (void)_animateTitleBackFromNavBar;
- (void)_animateTitleToNavBarWithText:(id)arg1 withAnimate:(BOOL)arg2;
- (void)_animateTitleToNavBarWithText:(id)arg1;
- (BOOL)reachMaxLimited;
- (void)showWebViewWithPageUrl:(id)arg1 defaultTitle:(id)arg2;
- (BOOL)isChannelLoadingViewShow;
- (void)hideChannelLoadingView:(BOOL)arg1;
- (void)showChannelLoadingView;
- (void)navigateToSingerVC:(id)arg1 coverPage:(int)arg2;
- (void)navigateToSingerVC:(id)arg1;
- (id)getDestViewControllerByCreator:(id)arg1;
- (void)navigateToPersonalCenter:(id)arg1 fromVC:(id)arg2;
- (void)channelAlertView:(id)arg1 clickedButtonAtIndex:(int)arg2;
- (void)jumpToViewByMid:(int)arg1 AndKey1:(id)arg2 AndKey2:(id)arg3 AndKey3:(id)arg4 AndKey4:(int)arg5 AndKey5:(int)arg6 AndKey6:(int)arg7 AndKey7:(id)arg8 bNeedAnimated:(BOOL)arg9 fromVC:(id)arg10;
- (BOOL)playChannel:(id)arg1;
- (BOOL)navigateToChannel:(id)arg1 fromvc:(id)arg2;
- (void)setCircleJumpSongToController:(id)arg1;
- (BOOL)navigateToChannel:(id)arg1;
- (void)showVipChannelStuckAlert;
- (void)handleVipChannel:(id)arg1;
- (void)handleExpiredChannel:(id)arg1;
- (BOOL)isExpiredChannel:(id)arg1;
- (BOOL)isValidChannel:(id)arg1;
- (BOOL)isSamePlayingList:(id)arg1;
- (void)showTips:(id)arg1;
- (void)addBottomGreenLine;
- (void)addChannelLayoutTableViewWithFrame:(struct CGRect)arg1 inView:(id)arg2 bottomShadow:(BOOL)arg3;
- (struct CGRect)_defaultChannelLayoutTableViewFrame;
- (void)addChannelLayoutShadowTableView;
- (void)addChannelLayoutTableView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

