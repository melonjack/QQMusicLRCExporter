//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "SkinViewController.h"

#import "AudioPlayManagerDelegate.h"
#import "LyricChangeDelegate.h"
#import "ProcessViewDelegate.h"
#import "QMPlayingViewDelegate.h"
#import "RadioCreatingDelegate.h"
#import "UIAlertViewDelegate.h"
#import "UIScrollViewDelegate.h"
#import "UIViewControllerTransitioningDelegate.h"

@class BEActionSheetStyleiOS7, CreatingRadioVC, ImageWithSongID, MarqueeLabel, NSMutableArray, NSMutableDictionary, NSString, NewPlayingListNormalVC, NewPlayingListRadioVC, NowPlayingListVC, PlayList, QMPlayingEmptyView, QMPlayingQPlayTable, QMPlayingView, RadioHistoryVC, SongInfo, UIButton, UIImage, UILabel, UILockScreenCoverAlbumView, UIView;

__attribute__((visibility("hidden")))
@interface QMAudioPlayerVC : SkinViewController <AudioPlayManagerDelegate, UIAlertViewDelegate, UIScrollViewDelegate, ProcessViewDelegate, LyricChangeDelegate, RadioCreatingDelegate, QMPlayingViewDelegate, UIViewControllerTransitioningDelegate>
{
    BOOL _isShowedLyric;
    int _actionSheetIndexCreateRadio;
    int _actionSheetIndexFingerPrint;
    int _actionSheetIndexResearchLyric;
    int _actionSheetIndexReq;
    int _actionSheetIndexSongerInfo;
    int _actionSheetIndexAlbumInfo;
    int _actionSheetIndexToMv;
    int _actionSheetIndexDownLoad;
    int _actionSheetIndexAddToMyFavorite;
    int _actionSheetIndexToKSong;
    RadioHistoryVC *_radioHisVC;
    ImageWithSongID *_imageObject;
    float _progress;
    BOOL _isShareSongButtonClick;
    BOOL _canotShowPlayingList;
    int lastPageIndex;
    BOOL _isTopViewController;
    BOOL _isShowFromList;
    BOOL _curSongHQ;
    BOOL _curSongSQ;
    BOOL _isAlbumAnimating;
    QMPlayingView *_playingView;
    CreatingRadioVC *_CRVC;
    PlayList *_playList;
    QMPlayingQPlayTable *_qplayTableView;
    UIButton *_showMoreplayOPViewBtn;
    UIButton *_hidePlayingViewBtn;
    BEActionSheetStyleiOS7 *_actionSheet;
    MarqueeLabel *_nowPlayingNavigationTitle;
    UILabel *_navigationTitleLabel;
    UIView *_nowPlayingNavigationTitleView;
    UIImage *_currentDisplayAlbumImage;
    UIImage *_lyricImage;
    SongInfo *_curPlaySong;
    NSMutableDictionary *_nowPlayingInfoDic;
    SongInfo *_lastAddToLoveSong;
    NSMutableArray *_radioSongDeleteList;
    NowPlayingListVC *_nowPlayingListVC;
    NewPlayingListNormalVC *_playListNewVC;
    NewPlayingListRadioVC *_radioPlayListNewVC;
    UIImage *_stayUpdateImage;
    UILockScreenCoverAlbumView *_lockScreen;
    float _angle;
    id <UIViewControllerContextTransitioning> _transitionContext;
    UIView *_shadeView;
    struct CGRect _pageHeaderViewFrame;
    struct CGRect _headerViewFrame;
    struct CGRect _albumViewFrame;
    struct CGRect _footViewFrame;
    struct CGRect _miniPlayerAlbumViewFrame;
}

@property(retain, nonatomic) UIView *shadeView; // @synthesize shadeView=_shadeView;
@property(retain, nonatomic) id <UIViewControllerContextTransitioning> transitionContext; // @synthesize transitionContext=_transitionContext;
@property(nonatomic) float angle; // @synthesize angle=_angle;
@property(nonatomic) struct CGRect miniPlayerAlbumViewFrame; // @synthesize miniPlayerAlbumViewFrame=_miniPlayerAlbumViewFrame;
@property(nonatomic) struct CGRect footViewFrame; // @synthesize footViewFrame=_footViewFrame;
@property(nonatomic) struct CGRect albumViewFrame; // @synthesize albumViewFrame=_albumViewFrame;
@property(nonatomic) struct CGRect headerViewFrame; // @synthesize headerViewFrame=_headerViewFrame;
@property(nonatomic) struct CGRect pageHeaderViewFrame; // @synthesize pageHeaderViewFrame=_pageHeaderViewFrame;
@property(retain, nonatomic) UILockScreenCoverAlbumView *lockScreen; // @synthesize lockScreen=_lockScreen;
@property(retain, nonatomic) UIImage *stayUpdateImage; // @synthesize stayUpdateImage=_stayUpdateImage;
@property(nonatomic) BOOL isAlbumAnimating; // @synthesize isAlbumAnimating=_isAlbumAnimating;
@property(retain, nonatomic) NewPlayingListRadioVC *radioPlayListNewVC; // @synthesize radioPlayListNewVC=_radioPlayListNewVC;
@property(retain, nonatomic) NewPlayingListNormalVC *playListNewVC; // @synthesize playListNewVC=_playListNewVC;
@property(retain, nonatomic) NowPlayingListVC *nowPlayingListVC; // @synthesize nowPlayingListVC=_nowPlayingListVC;
@property(nonatomic) BOOL curSongSQ; // @synthesize curSongSQ=_curSongSQ;
@property(nonatomic) BOOL curSongHQ; // @synthesize curSongHQ=_curSongHQ;
@property(retain, nonatomic) NSMutableArray *radioSongDeleteList; // @synthesize radioSongDeleteList=_radioSongDeleteList;
@property(retain, nonatomic) SongInfo *lastAddToLoveSong; // @synthesize lastAddToLoveSong=_lastAddToLoveSong;
@property(retain, nonatomic) NSMutableDictionary *nowPlayingInfoDic; // @synthesize nowPlayingInfoDic=_nowPlayingInfoDic;
@property(retain, nonatomic) SongInfo *curPlaySong; // @synthesize curPlaySong=_curPlaySong;
@property(retain, nonatomic) UIImage *lyricImage; // @synthesize lyricImage=_lyricImage;
@property(retain, nonatomic) UIImage *currentDisplayAlbumImage; // @synthesize currentDisplayAlbumImage=_currentDisplayAlbumImage;
@property(retain, nonatomic) UIView *nowPlayingNavigationTitleView; // @synthesize nowPlayingNavigationTitleView=_nowPlayingNavigationTitleView;
@property(retain, nonatomic) UILabel *navigationTitleLabel; // @synthesize navigationTitleLabel=_navigationTitleLabel;
@property(retain, nonatomic) MarqueeLabel *nowPlayingNavigationTitle; // @synthesize nowPlayingNavigationTitle=_nowPlayingNavigationTitle;
@property(retain, nonatomic) BEActionSheetStyleiOS7 *actionSheet; // @synthesize actionSheet=_actionSheet;
@property(retain, nonatomic) UIButton *hidePlayingViewBtn; // @synthesize hidePlayingViewBtn=_hidePlayingViewBtn;
@property(retain, nonatomic) UIButton *showMoreplayOPViewBtn; // @synthesize showMoreplayOPViewBtn=_showMoreplayOPViewBtn;
@property(retain, nonatomic) QMPlayingQPlayTable *qplayTableView; // @synthesize qplayTableView=_qplayTableView;
@property(nonatomic) BOOL isShowFromList; // @synthesize isShowFromList=_isShowFromList;
@property(nonatomic) BOOL isTopViewController; // @synthesize isTopViewController=_isTopViewController;
@property(retain, nonatomic) PlayList *playList; // @synthesize playList=_playList;
@property(retain, nonatomic) CreatingRadioVC *CRVC; // @synthesize CRVC=_CRVC;
@property(retain, nonatomic) QMPlayingView *playingView; // @synthesize playingView=_playingView;
- (void).cxx_destruct;
- (id)animationControllerForDismissedController:(id)arg1;
- (id)animationControllerForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3;
- (void)hideNonStoppedBannerTips;
- (void)showNonStoppedBannerTips:(id)arg1 WithIcon:(int)arg2;
- (void)resetPlaybackRateIfChanged;
- (void)setPlayingNextSongQueue:(BOOL)arg1;
- (void)songQueryBackToPlayingVC:(id)arg1;
- (BOOL)canGentureToPopView;
- (BOOL)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)resetNavbar;
- (void)onRadioListButtonClicked:(id)arg1;
- (void)radioListButtonClose;
- (void)updateRadioPlayingView:(BOOL)arg1;
- (id)getCurPlayingRadioItem;
- (void)commonRadioLoadSuccess;
- (void)radioCreatedFailed;
- (void)radioCreatedSuccess;
- (void)onColorStyleChanged;
- (id)trimAlbumImage:(id)arg1;
- (void)handleTrashCanAction;
- (void)systemVolumeChanged:(id)arg1;
- (struct CGSize)imageSizeForProcessView:(id)arg1 position:(int)arg2;
- (id)imageNameForProcessView:(id)arg1 position:(int)arg2;
- (BOOL)isLyricVisiable;
- (void)setPlaying:(BOOL)arg1;
- (void)showTranslateLyricAlertView;
- (void)addLyricStat;
- (void)fourceToGetLyric;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)onNotifyDeletedSongFrom201:(id)arg1;
- (void)onNotifyLogout:(id)arg1;
- (void)onNotifyPlayModeChanged:(id)arg1;
- (void)onNotifySongsChangedLoveState:(id)arg1;
- (id)getAllVCType;
- (int)vcType;
- (void)loginOKCall;
- (void)setIsShowedLyric:(BOOL)arg1;
- (void)updateIsMyFavorite:(id)arg1;
- (void)updateStopPlay;
- (void)hideWaitNetInfo;
- (void)showRadioSongFetchLoadingTips;
- (void)updateWaitNetInfo;
- (void)updatePlayStateChange:(int)arg1 isLocalFile:(BOOL)arg2;
- (void)fadeOutArtWorkAfterDelay;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(int)arg2;
- (void)delayCheckAlertView;
- (void)onFetchSingleRadioDataFailed:(id)arg1;
- (void)onNotifyNetStateChange:(id)arg1;
- (void)updateDownLoadBtn;
- (void)updateButtonStates;
- (void)imageSavedToPhotosAlbum:(id)arg1 didFinishSavingWithError:(id)arg2 contextInfo:(void *)arg3;
- (void)saveImageToLocol:(id)arg1;
- (void)onSmallImageClicked:(id)arg1;
- (void)onTouchUpInsideSmallImage:(id)arg1;
- (void)updateAlbumRotationAnimationByState:(int)arg1;
- (void)updateAlbumImageViewWithAnimation:(id)arg1;
- (void)reCoverAfterAnimationStop;
- (void)reCoverBeforeAnimationStart;
- (void)valuesForFrames;
- (struct CGPoint)getCenterByRect:(struct CGRect)arg1;
- (void)animationDidStop:(id)arg1 finished:(BOOL)arg2;
- (void)showPlayingViewAnimation;
- (void)returnMiniPlayerAnimation;
- (BOOL)isAnimating;
- (void)preUpdateDefaultAlbumImage:(id)arg1;
- (void)updateAlbumInfo:(id)arg1;
- (void)updateMusicInfo:(id)arg1 PlayList:(id)arg2 autoPlay:(BOOL)arg3;
- (void)updateWaitingSongInfo;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)updatePlayingviewWithTranslateLyricShow:(BOOL)arg1;
- (void)onLyricChangeWithTextArray:(id)arg1;
- (void)onLyricMoveToNext:(id)arg1;
- (void)onNotifyLockScreenLightUp:(id)arg1;
- (void)onNotifyLockScreenLyricDisplayChange:(id)arg1;
- (void)updateTime:(double)arg1 duration:(double)arg2 loading:(double)arg3 buffer:(double)arg4 starting:(double)arg5;
- (void)updateCurSongDurationAtLauch:(double)arg1;
- (void)switchOffQPlayModeSinceDeviceLost;
- (void)updateQPlayUI;
- (void)updateAirPlayUI;
- (void)setNowPlaying:(id)arg1;
- (void)navRecognizerEnable:(BOOL)arg1;
- (void)updateLyricData:(id)arg1 State:(int)arg2;
- (void)freshHqView;
- (void)refreshHqButton;
- (void)hiddenDefaultImageView;
- (void)updateAlbumRelateInfo:(id)arg1;
- (void)updateAlbumImageView:(id)arg1;
- (void)blurAlbumImageByTentBlur:(id)arg1;
- (void)blurAlbumImageByGauss:(id)arg1;
- (BOOL)writeImage:(id)arg1 toFileAtPath:(id)arg2;
- (id)_getLockScreenArtwork:(int)arg1 forceCreateNewAlbumImage:(BOOL)arg2;
- (id)_createNowPlayingDictionary:(id)arg1 artworkType:(int)arg2 forceCreateNewAlbumImage:(BOOL)arg3;
- (float)_currentPlaybackRate;
- (void)showBannerTipsOrAlertWhenNoWifiAndIsTips:(BOOL)arg1;
- (void)restoreAlbumImage;
- (void)showLyricWithAnimate;
- (BOOL)showContinuousBannerTips;
- (void)showRegSongString:(id)arg1;
- (void)jumpToDownloadView;
- (void)onNotifyCheckFlowPackFinishWhenDownload:(id)arg1;
- (void)playMV;
- (void)actionSheet:(id)arg1 actionSheetButtonClickedAtIndex:(int)arg2;
- (void)jumpToShareVC:(id)arg1;
- (void)onNotifySoundEffectUpdated:(id)arg1;
- (void)showActionSheet:(id)arg1;
- (void)actionSheetWillHide:(id)arg1;
- (void)download:(id)arg1;
- (void)onNotifyClearAllSongs:(id)arg1;
- (void)onNotifySongFileAdded:(id)arg1;
- (void)onNotifySongFileDelete:(id)arg1;
- (void)showKSongAction:(id)arg1;
- (void)addToFavariteFolder:(id)arg1;
- (void)addAnimateToButtons:(float)arg1;
- (void)actionShareCanBtnTapped:(id)arg1;
- (void)kSongCanBtnTapped:(id)arg1;
- (void)draggingViewOffsetPoint:(struct CGPoint)arg1;
- (void)showAlbum;
- (void)handleGestureRecognizer:(id)arg1;
- (void)handleTranshCanSingleRadio;
- (void)handleTranshCanGuessYouLikeRadio;
- (void)removeCurrentAndPlayNextRadioSong;
- (void)trashCanBtnTapped:(id)arg1;
- (void)handleTrashCanBtnTapped;
- (void)playNextSong:(id)arg1;
- (void)updateQPlaySong:(id)arg1;
- (void)playPreSong:(id)arg1;
- (void)clearPlayingInfo;
- (void)changePlayMode:(id)arg1;
- (void)updatePlayModeChange;
- (void)delayAddSystemVolumeObserver;
- (void)speakerVolumeChanged:(id)arg1;
- (void)addToMyLoveOnline:(id)arg1;
- (void)downLoadSong:(id)arg1;
- (void)showSingerView;
- (void)showQPlayDeviceTableView;
- (void)pushVC:(id)arg1;
- (void)setQPlayButtonSelected:(BOOL)arg1;
- (void)setVolumeSilder:(float)arg1;
- (void)playingListClose;
- (void)recoverPlayMode;
- (void)onPlayingListButtonClicked:(id)arg1;
- (void)showPlayingList;
- (void)initPlayingListVC;
- (id)getPlayingModeDescription:(int)arg1;
- (void)showPlayList:(id)arg1;
- (void)initRadioPlayingListVC;
- (void)showOrHideplayOPView;
- (void)showMorePlayOPView:(id)arg1;
- (BOOL)isShowedPlayOPView;
- (void)addPlayingView;
- (void)addNoPlayingView;
- (void)viewDidLoad;
- (void)exclusiveAction:(id)arg1;
- (void)HqBtnAction:(id)arg1;
- (void)loadView;
- (void)reportCommonRadioOperate:(int)arg1;
- (BOOL)isPlayingCommonRadio;
- (id)getBackImageSelectName;
- (id)getBackImageName;
- (void)navRefresh;
- (int)statusBarStyle;
- (void)refreshPlayingTitle:(id)arg1;
- (void)navRefreshWithStatusBar:(BOOL)arg1;
- (BOOL)canBecomeFirstResponder;
- (BOOL)_needSetStatusBarWhileDisappar;
- (void)viewWillDisappear:(BOOL)arg1;
- (void)viewDidAppear:(BOOL)arg1;
- (void)viewWillAppear:(BOOL)arg1;
- (void)longPressBack:(id)arg1;
- (void)back:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(retain, nonatomic) QMPlayingEmptyView *emptyView;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

