//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSDate, NSObject<OS_dispatch_queue>;

__attribute__((visibility("hidden")))
@interface QMLogManager : NSObject
{
    struct LogQueue *_logQueue;
    char *_permanentBuffer;
    unsigned long _curPermanentBufLen;
    BOOL _hasWrittenBasicInfoAlready;
    char *_errorBuffer;
    unsigned long _errorBufLen;
    char *_newLogBuffer;
    unsigned long _newLogBufLen;
    NSDate *_appLaunchDate;
    NSObject<OS_dispatch_queue> *_logSerialQueue;
}

+ (id)encodeQQKey:(id)arg1;
+ (id)getLogFileNameByStartDate:(id)arg1 endDate:(id)arg2;
+ (id)getLogDateFormat;
+ (id)sharedQMLogManager;
+ (id)shareNSDateFormatter;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *logSerialQueue; // @synthesize logSerialQueue=_logSerialQueue;
@property(retain, nonatomic) NSDate *appLaunchDate; // @synthesize appLaunchDate=_appLaunchDate;
- (void).cxx_destruct;
- (id)getAllSortedDateRanges;
- (id)getAllSortedLogFilePaths;
- (id)convertDateRangeToFileName:(id)arg1;
- (id)convertFileNameToDateRange:(id)arg1;
- (id)encodeJailBrokenKey:(id)arg1;
- (id)encodeDeviceValue:(id)arg1;
- (id)encodeDeviceKey:(id)arg1;
- (id)encodeUUIDValue:(id)arg1;
- (id)encodeUUIDKey:(id)arg1;
- (id)encodeOSVersionValue:(id)arg1;
- (id)encodeOSVersionKey:(id)arg1;
- (id)encodeOSNameValue:(id)arg1;
- (id)encodeOSNameKey:(id)arg1;
- (long long)dirSizeAtDirPath:(const char *)arg1 isCalculateSubDir:(BOOL)arg2;
- (long long)fileSizeAtFilePath:(const char *)arg1;
- (id)getTotalTranslatedLogArray;
- (BOOL)deleteCurrentLogBuffer1;
- (id)getUploadData1:(long)arg1 needGZip:(BOOL)arg2;
- (void)saveLogToFile1;
- (id)_getLogFileNamebyLaunchDate;
- (vector_8f9e92da *)_createCopyOfAllLog:(char **)arg1;
- (unsigned long)_getCurrentLogLocation;
- (unsigned long)getCurrentLogDataLength1;
- (void)addNewLog1:(id)arg1 withLevel:(int)arg2 withCategory:(id)arg3;
- (BOOL)deleteCurrentLogBuffer;
- (id)getZipArchiveData:(long long)arg1 inFilePaths:(id)arg2;
- (id)getZipArchiveData:(long long)arg1 fromDate:(id)arg2;
- (id)getRecentZipArchiveData:(long long)arg1;
- (void)splitSingleLargeLogFileToPieces:(id)arg1;
- (void)splitAllLargeLogFileInToPieces;
- (long long)pieceSize;
- (id)getErrorLogData;
- (id)getPermanentLogData;
- (id)getBasicInfo;
- (id)getLogLevelStringFromEnum:(int)arg1;
- (id)getLogDirPath;
- (unsigned long)getCurrentLogDataLength;
- (void)saveLogToFileAndIsAsync:(BOOL)arg1;
- (void)_deleteUnrecentLogFiles;
- (void)_writeBuffer:(char *)arg1 withLength:(unsigned long)arg2 withBaseData:(id)arg3 toFile:(id)arg4;
- (id)_readDataWithSeekPos:(int)arg1 fromFile:(id)arg2;
- (id)_isFileExist:(id)arg1;
- (void)_savePermanentLog;
- (void)_addPermanentLog:(const char *)arg1 withLength:(unsigned long)arg2;
- (void)_addPermanentLog:(id)arg1;
- (id)_getPermanentLogFilePath;
- (id)getPermanentLogFilePath;
- (void)_saveErrorLog;
- (void)_addErrorLog:(const char *)arg1 withLength:(unsigned long)arg2;
- (void)_addErrorLog:(id)arg1;
- (id)_getErrorLogFilePath;
- (id)getErrorLogFilePath;
- (void)_addNewLog:(id)arg1;
- (id)_getLogFilePath;
- (id)_getLogStartDateStr;
- (void)addNewLog:(id)arg1 withLevel:(int)arg2 withCategory:(id)arg3;
- (void)dealloc;
- (id)init;

@end

